{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Albums Page\", -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";gCAEQA,oBAAoB,YAAhB,aAAW;oBAAfC,UAAoB;;uBADxBC,oBAEM","names":["_createElementVNode","_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/evelynliu/VSCodeProjects/photobook/src/views/AlbumsPage.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>Albums Page</h3>\n    </div>\n</template>\n\n<script>\nimport { albumInfo } from '@/store/albums/albums'\nimport { mapGetters } from 'vuex'\n\n    export default {\n        async mounted(){\n            this.$store.dispatch(\"albumInfo/getAlbumsData\")\n        },\n        data: () => ({albumName: \"\", error: \"\"}),\n        methods: {\n            openAlbumDetail(album){\n                this.$router.push(`/album/${album.id}`)\n            },\n            async createAlbum(){\n                this.error = ''\n                if (!this.albumName) {\n                    this.error = \"Please enter an album name.\"\n                    return\n                }\n                const newAlbum = {\n                    name: this.albumName,\n                    owner: this.user.username,\n                    ownerId: this.user.id,\n                };\n                this.$store.dispatch(\"albumInfo/createAlbum\", newAlbum);\n            }\n        },\n        computed: {\n            ...mapGetters({\n                user: \"auth/user\",\n                albums: \"albumInfo/albums\"\n            })\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}