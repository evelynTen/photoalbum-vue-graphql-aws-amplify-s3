{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger, Hub, parseAWSExports } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */function () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    _instance = this;\n    this.record = this.record.bind(this);\n    Hub.listen('auth', listener);\n    Hub.listen('storage', listener);\n    Hub.listen('analytics', listener);\n    Hub.listen('core', listener);\n  }\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n    if (this._config['disabled']) {\n      this._disabled = true;\n    }\n    // turn on the autoSessionRecord if not specified\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled'],\n        autoSessionRecord: _this._config['autoSessionRecord']\n      }, providerConfig));\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    }\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param pluggable - an instance of the plugin\n   */\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable);\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n      idx += 1;\n    }\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, params;\n      return __generator(this, function (_a) {\n        event = {\n          name: '_session.start'\n        };\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', event, 'Recording Analytics session start event');\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, params;\n      return __generator(this, function (_a) {\n        event = {\n          name: '_session.stop'\n        };\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', event, 'Recording Analytics session stop event');\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record one analytic event and send it to Pinpoint\n   * @param event - An object with the name of the event, attributes of the event and event metrics.\n   * @param [provider] - name of the provider.\n   */\n  AnalyticsClass.prototype.record = function (event, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', params.event, 'Recording Analytics event');\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2 /*return*/, this.record(event, provider)];\n      });\n    });\n  };\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    }\n    // to sync up two different configuration ways of auto session tracking\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n    var tracker = this._trackers[trackerType];\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n  return AnalyticsClass;\n}();\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar credentialsConfigured = false;\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n    payload = capsule.payload;\n  logger.debug('on hub capsule ' + channel, payload);\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n    case 'storage':\n      storageEvent(payload);\n      break;\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n    case 'core':\n      coreEvent(payload);\n      break;\n    default:\n      break;\n  }\n};\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n    attrs = _a.attrs,\n    metrics = _a.metrics;\n  if (!attrs) return;\n  if (analyticsConfigured) {\n    _instance.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\nvar authEvent = function (payload) {\n  var event = payload.event;\n  if (!event) {\n    return;\n  }\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, _instance.record({\n              name: \"_userauth.\" + eventName\n            })];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n    case 'configured':\n      authConfigured = true;\n      if (analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n      if (authConfigured || credentialsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar coreEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'credentials_configured':\n      credentialsConfigured = true;\n      if (analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar sendEvents = function () {\n  var config = _instance.configure();\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    _instance.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n  _instance.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);","map":{"version":3,"mappings":"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","names":["Amplify","ConsoleLogger","Logger","Hub","parseAWSExports","AWSPinpointProvider","PageViewTracker","EventTracker","SessionTracker","logger","AMPLIFY_SYMBOL","Symbol","for","dispatchAnalyticsEvent","event","data","message","dispatch","trackers","pageView","session","_instance","_config","_pluggables","_disabled","_trackers","record","bind","listen","listener","AnalyticsClass","config","debug","amplifyConfig","Object","assign","Analytics","undefined","forEach","providerConfig","pluggable","getProviderName","_this","configure","disabled","autoSessionRecord","length","addPluggable","getCategory","push","providerName","i","idx","splice","provider","name","params","_sendEvent","attrs","Promise","resolve","reject","trackerType","opts","tracker","endpointUpdated","authConfigured","analyticsConfigured","credentialsConfigured","payload","channel","authEvent","storageEvent","analyticsEvent","coreEvent","metrics","attributes","catch","e","recordAuthEvent","eventName","_a","err_1","sendEvents","updateEndpoint","immediate","autoTrack","enable","register"],"sourceRoot":"","sources":["../src/Analytics.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}