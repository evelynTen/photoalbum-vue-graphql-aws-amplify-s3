{"ast":null,"code":"import { API, graphqlOperation } from \"aws-amplify\";\nimport { createAlbum as createAlbumMutation } from \"@/graphql/mutations\";\nimport { getAlbum as getAlbumQuery } from \"@/graphql/queries\";\nimport { listAlbums as listAlbumsQuery } from \"@/graphql/queries\";\nexport const albumInfo = {\n  namespaced: true,\n  state: {\n    albums: null\n  },\n  mutations: {\n    setAlbums(state, payload) {\n      state.albums = payload;\n    }\n  },\n  actions: {\n    async createAlbum({\n      dispatch\n    }, newAlbum) {\n      try {\n        await API.graphql(graphqlOperation(createAlbumMutation, {\n          input: newAlbum\n        }));\n        dispatch(\"getAlbumsData\");\n      } catch (error) {\n        console.error(\"createalbum\", error);\n      }\n    },\n    async getAlbum(_, albumId) {\n      return await API.graphql(graphqlOperation(getAlbumQuery, {\n        id: albumId\n      }));\n    },\n    async getAlbumsData({\n      commit\n    }) {\n      const albumsData = await API.graphql(graphqlOperation(listAlbumsQuery));\n      commit(\"setAlbums\", albumsData.data.listAlbums.items);\n    }\n  },\n  getters: {\n    albums: state => state.albums\n  }\n};","map":{"version":3,"names":["API","graphqlOperation","createAlbum","createAlbumMutation","getAlbum","getAlbumQuery","listAlbums","listAlbumsQuery","albumInfo","namespaced","state","albums","mutations","setAlbums","payload","actions","dispatch","newAlbum","graphql","input","error","console","_","albumId","id","getAlbumsData","commit","albumsData","data","items","getters"],"sources":["/Users/evelynliu/VSCodeProjects/photobook/src/store/albums/albums.js"],"sourcesContent":["import {API, graphqlOperation } from \"aws-amplify\";\nimport { createAlbum as createAlbumMutation } from \"@/graphql/mutations\";\nimport { getAlbum as getAlbumQuery } from \"@/graphql/queries\";\nimport { listAlbums as listAlbumsQuery } from \"@/graphql/queries\";\n\nexport const albumInfo = {\n    namespaced: true,\n    state: {albums: null},\n    mutations : {\n        setAlbums(state, payload){\n            state.albums = payload;\n        }\n    },\n    actions: {\n        async createAlbum({dispatch}, newAlbum) {\n            try {\n                await API.graphql(graphqlOperation(createAlbumMutation, {input: newAlbum}))\n                dispatch(\"getAlbumsData\");\n            } catch (error) {\n                console.error(\"createalbum\", error)\n            }\n        },\n        async getAlbum(_, albumId) {\n            return await API.graphql(\n                graphqlOperation(getAlbumQuery, {id: albumId}))\n        },\n        async getAlbumsData({commit}) {\n            const albumsData = await API.graphql(graphqlOperation(listAlbumsQuery));\n            commit(\"setAlbums\", albumsData.data.listAlbums.items);\n        }\n    },\n    getters: {\n        albums: (state) => state.albums\n    }\n}"],"mappings":"AAAA,SAAQA,GAAG,EAAEC,gBAAgB,QAAQ,aAAa;AAClD,SAASC,WAAW,IAAIC,mBAAmB,QAAQ,qBAAqB;AACxE,SAASC,QAAQ,IAAIC,aAAa,QAAQ,mBAAmB;AAC7D,SAASC,UAAU,IAAIC,eAAe,QAAQ,mBAAmB;AAEjE,OAAO,MAAMC,SAAS,GAAG;EACrBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IAACC,MAAM,EAAE;EAAI,CAAC;EACrBC,SAAS,EAAG;IACRC,SAAS,CAACH,KAAK,EAAEI,OAAO,EAAC;MACrBJ,KAAK,CAACC,MAAM,GAAGG,OAAO;IAC1B;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMb,WAAW,CAAC;MAACc;IAAQ,CAAC,EAAEC,QAAQ,EAAE;MACpC,IAAI;QACA,MAAMjB,GAAG,CAACkB,OAAO,CAACjB,gBAAgB,CAACE,mBAAmB,EAAE;UAACgB,KAAK,EAAEF;QAAQ,CAAC,CAAC,CAAC;QAC3ED,QAAQ,CAAC,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACvC;IACJ,CAAC;IACD,MAAMhB,QAAQ,CAACkB,CAAC,EAAEC,OAAO,EAAE;MACvB,OAAO,MAAMvB,GAAG,CAACkB,OAAO,CACpBjB,gBAAgB,CAACI,aAAa,EAAE;QAACmB,EAAE,EAAED;MAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IACD,MAAME,aAAa,CAAC;MAACC;IAAM,CAAC,EAAE;MAC1B,MAAMC,UAAU,GAAG,MAAM3B,GAAG,CAACkB,OAAO,CAACjB,gBAAgB,CAACM,eAAe,CAAC,CAAC;MACvEmB,MAAM,CAAC,WAAW,EAAEC,UAAU,CAACC,IAAI,CAACtB,UAAU,CAACuB,KAAK,CAAC;IACzD;EACJ,CAAC;EACDC,OAAO,EAAE;IACLnB,MAAM,EAAGD,KAAK,IAAKA,KAAK,CAACC;EAC7B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}