{"ast":null,"code":"/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nimport { __read } from \"tslib\";\n// Comment - TODO: remove\nvar FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\nexport var DateUtils = {\n  /**\n   * Milliseconds to offset the date to compensate for clock skew between device & services\n   */\n  clockOffset: 0,\n  getDateWithClockOffset: function () {\n    if (DateUtils.clockOffset) {\n      return new Date(new Date().getTime() + DateUtils.clockOffset);\n    } else {\n      return new Date();\n    }\n  },\n  /**\n   * @returns {number} Clock offset in milliseconds\n   */\n  getClockOffset: function () {\n    return DateUtils.clockOffset;\n  },\n  getHeaderStringFromDate: function (date) {\n    if (date === void 0) {\n      date = DateUtils.getDateWithClockOffset();\n    }\n    return date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n  },\n  getDateFromHeaderString: function (header) {\n    var _a = __read(header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/), 7),\n      year = _a[1],\n      month = _a[2],\n      day = _a[3],\n      hour = _a[4],\n      minute = _a[5],\n      second = _a[6];\n    return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n  },\n  isClockSkewed: function (serverDate) {\n    // API gateway permits client calls that are off by no more than Â±5 minutes\n    return Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS;\n  },\n  isClockSkewError: function (error) {\n    if (!error.response || !error.response.headers) {\n      return false;\n    }\n    var headers = error.response.headers;\n    return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) && (headers.date || headers.Date));\n  },\n  /**\n   * @param {number} offset Clock offset in milliseconds\n   */\n  setClockOffset: function (offset) {\n    DateUtils.clockOffset = offset;\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;AAOA;AAEA,IAAMA,kBAAkB,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;AAExC,OAAO,IAAMC,SAAS,GAAG;EACxB;;;EAGAC,WAAW,EAAE,CAAC;EAEdC,sBAAsB;IACrB,IAAIF,SAAS,CAACC,WAAW,EAAE;MAC1B,OAAO,IAAIE,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGJ,SAAS,CAACC,WAAW,CAAC;KAC7D,MAAM;MACN,OAAO,IAAIE,IAAI,EAAE;;EAEnB,CAAC;EAED;;;EAGAE,cAAc;IACb,OAAOL,SAAS,CAACC,WAAW;EAC7B,CAAC;EAEDK,uBAAuB,EAAvB,UAAwBC,IAA+C;IAA/C;MAAAA,OAAaP,SAAS,CAACE,sBAAsB,EAAE;IAAA;IACtE,OAAOK,IAAI,CAACC,WAAW,EAAE,CAACC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;EACxD,CAAC;EAEDC,uBAAuB,EAAvB,UAAwBC,MAAc;IAC/B,kFAEL;MAFQC,YAAI;MAAEC,aAAK;MAAEC,WAAG;MAAEC,YAAI;MAAEC,cAAM;MAAEC,cAExC;IAED,OAAO,IAAId,IAAI,CACdA,IAAI,CAACe,GAAG,CACPC,MAAM,CAACP,IAAI,CAAC,EACZO,MAAM,CAACN,KAAK,CAAC,GAAG,CAAC,EACjBM,MAAM,CAACL,GAAG,CAAC,EACXK,MAAM,CAACJ,IAAI,CAAC,EACZI,MAAM,CAACH,MAAM,CAAC,EACdG,MAAM,CAACF,MAAM,CAAC,CACd,CACD;EACF,CAAC;EAEDG,aAAa,EAAb,UAAcC,UAAgB;IAC7B;IACA,OACCC,IAAI,CAACC,GAAG,CACPF,UAAU,CAACjB,OAAO,EAAE,GAAGJ,SAAS,CAACE,sBAAsB,EAAE,CAACE,OAAO,EAAE,CACnE,IAAIL,kBAAkB;EAEzB,CAAC;EAEDyB,gBAAgB,EAAhB,UAAiBC,KAAU;IAC1B,IAAI,CAACA,KAAK,CAACC,QAAQ,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACC,OAAO,EAAE;MAC/C,OAAO,KAAK;;IAGL,oCAAO;IAEf,OAAOC,OAAO,CACb,CAAC,qBAAqB,EAAE,2BAA2B,CAAC,CAACC,QAAQ,CAC5DF,OAAO,CAAC,kBAAkB,CAAC,CAC3B,KACCA,OAAO,CAACpB,IAAI,IAAIoB,OAAO,CAACxB,IAAI,CAAC,CAC/B;EACF,CAAC;EAED;;;EAGA2B,cAAc,EAAd,UAAeC,MAAc;IAC5B/B,SAAS,CAACC,WAAW,GAAG8B,MAAM;EAC/B;CACA","names":["FIVE_MINUTES_IN_MS","DateUtils","clockOffset","getDateWithClockOffset","Date","getTime","getClockOffset","getHeaderStringFromDate","date","toISOString","replace","getDateFromHeaderString","header","year","month","day","hour","minute","second","UTC","Number","isClockSkewed","serverDate","Math","abs","isClockSkewError","error","response","headers","Boolean","includes","setClockOffset","offset"],"sourceRoot":"","sources":["../../src/Util/DateUtils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}