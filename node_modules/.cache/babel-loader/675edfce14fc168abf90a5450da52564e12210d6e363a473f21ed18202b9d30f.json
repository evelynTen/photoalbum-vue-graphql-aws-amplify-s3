{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { HeadBucketRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlHeadBucketCommand, serializeAws_restXmlHeadBucketCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation is useful to determine if a bucket exists and you have permission to\n *          access it. The operation returns a <code>200 OK</code> if the bucket exists and you have\n *          permission to access it. Otherwise, the operation might return responses such as <code>404\n *             Not Found</code> and <code>403 Forbidden</code>. </p>\n *\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:ListBucket</code> action. The bucket owner has this permission by default and\n *          can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n */\nvar HeadBucketCommand = /** @class */function (_super) {\n  __extends(HeadBucketCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function HeadBucketCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  HeadBucketCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"HeadBucketCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: HeadBucketRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  HeadBucketCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlHeadBucketCommand(input, context);\n  };\n  HeadBucketCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlHeadBucketCommand(output, context);\n  };\n  return HeadBucketCommand;\n}($Command);\nexport { HeadBucketCommand };","map":{"version":3,"mappings":";AACA,SAASA,iBAAiB,QAAQ,oBAAoB;AACtD,SACEC,uCAAuC,EACvCC,qCAAqC,QAChC,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;AAWA;EAAuCC;EAKrC;EACA;EAEA,2BAAqBC,KAA6B;IAAlD;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,6CAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,mBAAmB;IACvC,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,iBAAiB,CAAC0B,kBAAkB;MAC7DC,wBAAwB,EAAE,UAACC,MAAW;QAAK,aAAM;MAAN;KAC5C;IACO,kBAAc,GAAKf,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,qCAAS,GAAjB,UAAkBH,KAA6B,EAAEwB,OAAuB;IACtE,OAAO9B,qCAAqC,CAACM,KAAK,EAAEwB,OAAO,CAAC;EAC9D,CAAC;EAEOrB,uCAAW,GAAnB,UAAoBiB,MAAsB,EAAEI,OAAuB;IACjE,OAAO/B,uCAAuC,CAAC2B,MAAM,EAAEI,OAAO,CAAC;EACjE,CAAC;EAIH,wBAAC;AAAD,CAAC,CAvDsC1B,QAAQ","names":["HeadBucketRequest","deserializeAws_restXmlHeadBucketCommand","serializeAws_restXmlHeadBucketCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","HeadBucketCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sourceRoot":"","sources":["../../../commands/HeadBucketCommand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}