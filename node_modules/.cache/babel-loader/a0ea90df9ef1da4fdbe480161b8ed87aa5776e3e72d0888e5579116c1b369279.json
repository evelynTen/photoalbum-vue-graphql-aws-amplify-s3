{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetCampaignVersionsRequest, GetCampaignVersionsResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetCampaignVersionsCommand, serializeAws_restJson1GetCampaignVersionsCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves information about the status, configuration, and other settings for all versions of a campaign.</p>\n */\nvar GetCampaignVersionsCommand = /** @class */function (_super) {\n  __extends(GetCampaignVersionsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetCampaignVersionsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetCampaignVersionsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PinpointClient\";\n    var commandName = \"GetCampaignVersionsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetCampaignVersionsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetCampaignVersionsResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetCampaignVersionsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1GetCampaignVersionsCommand(input, context);\n  };\n  GetCampaignVersionsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1GetCampaignVersionsCommand(output, context);\n  };\n  return GetCampaignVersionsCommand;\n}($Command);\nexport { GetCampaignVersionsCommand };","map":{"version":3,"mappings":";AACA,SAASA,0BAA0B,EAAEC,2BAA2B,QAAQ,oBAAoB;AAC5F,SACEC,kDAAkD,EAClDC,gDAAgD,QAC3C,4BAA4B;AACnC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;AAGA;EAAgDC;EAK9C;EACA;EAEA,oCAAqBC,KAAsC;IAA3D;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,sDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAA2C,EAC3CC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IAEzF,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,gBAAgB;IACnC,IAAMC,WAAW,GAAG,4BAA4B;IAChD,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,0BAA0B,CAAC0B,kBAAkB;MACtEC,wBAAwB,EAAE1B,2BAA2B,CAACyB;KACvD;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,8CAAS,GAAjB,UAAkBH,KAAsC,EAAEuB,OAAuB;IAC/E,OAAO5B,gDAAgD,CAACK,KAAK,EAAEuB,OAAO,CAAC;EACzE,CAAC;EAEOpB,gDAAW,GAAnB,UAAoBqB,MAAsB,EAAED,OAAuB;IACjE,OAAO7B,kDAAkD,CAAC8B,MAAM,EAAED,OAAO,CAAC;EAC5E,CAAC;EAIH,iCAAC;AAAD,CAAC,CAtD+CzB,QAAQ","names":["GetCampaignVersionsRequest","GetCampaignVersionsResponse","deserializeAws_restJson1GetCampaignVersionsCommand","serializeAws_restJson1GetCampaignVersionsCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetCampaignVersionsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sourceRoot":"","sources":["../../../commands/GetCampaignVersionsCommand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}