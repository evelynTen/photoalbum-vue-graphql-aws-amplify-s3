{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __awaiter, __generator } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import '../Common/Polyfills';\nimport Observable from 'zen-observable-ts';\nimport { Amplify, browserOrNode, ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('PubSub');\nvar PubSubClass = /** @class */function () {\n  /**\n   * Initialize PubSub with AWS configurations\n   *\n   * @param {PubSubOptions} options - Configuration object for PubSub\n   */\n  function PubSubClass(options) {\n    this._options = options !== null && options !== void 0 ? options : {};\n    logger.debug('PubSub Options', this._options);\n    this._pluggables = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n  Object.defineProperty(PubSubClass.prototype, \"awsAppSyncProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncProvider) {\n        this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n      }\n      return this._awsAppSyncProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PubSubClass.prototype, \"awsAppSyncRealTimeProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncRealTimeProvider) {\n        this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n      }\n      return this._awsAppSyncRealTimeProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PubSubClass.prototype.getModuleName = function () {\n    return 'PubSub';\n  };\n  /**\n   * Configure PubSub part with configurations\n   *\n   * @param {PubSubOptions} config - Configuration for PubSub\n   * @return {Object} - The current configuration\n   */\n  PubSubClass.prototype.configure = function (options) {\n    var _this = this;\n    var opt = options ? options.PubSub || options : {};\n    logger.debug('configure PubSub', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n    this._pluggables.map(function (pluggable) {\n      return pluggable.configure(_this._options);\n    });\n    return this._options;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  PubSubClass.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n          this._pluggables.push(pluggable);\n          config = pluggable.configure(this._options);\n          return [2 /*return*/, config];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  /**\n   * remove plugin from PubSub category\n   * @param providerName - the name of the plugin\n   */\n  PubSubClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n  };\n  PubSubClass.prototype.getProviderByName = function (providerName) {\n    if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n      return this.awsAppSyncProvider;\n    }\n    if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n      return this.awsAppSyncRealTimeProvider;\n    }\n    return this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n  };\n  PubSubClass.prototype.getProviders = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var providerName = options.provider;\n    if (!providerName) {\n      return this._pluggables;\n    }\n    var provider = this.getProviderByName(providerName);\n    if (!provider) {\n      throw new Error(\"Could not find provider named \" + providerName);\n    }\n    return [provider];\n  };\n  PubSubClass.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n          return provider.publish(topics, msg, options);\n        }))];\n      });\n    });\n  };\n  PubSubClass.prototype.subscribe = function (topics, options) {\n    if (isNode && this._options && this._options.ssr) {\n      throw new Error('Subscriptions are not supported for Server-Side Rendering (SSR)');\n    }\n    logger.debug('subscribe options', options);\n    var providers = this.getProviders(options);\n    return new Observable(function (observer) {\n      var observables = providers.map(function (provider) {\n        return {\n          provider: provider,\n          observable: provider.subscribe(topics, options)\n        };\n      });\n      var subscriptions = observables.map(function (_a) {\n        var provider = _a.provider,\n          observable = _a.observable;\n        return observable.subscribe({\n          start: console.error,\n          next: function (value) {\n            return observer.next({\n              provider: provider,\n              value: value\n            });\n          },\n          error: function (error) {\n            return observer.error({\n              provider: provider,\n              error: error\n            });\n          }\n        });\n      });\n      return function () {\n        return subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n  };\n  return PubSubClass;\n}();\nexport { PubSubClass };\nexport var PubSub = new PubSubClass();\nAmplify.register(PubSub);","map":{"version":3,"mappings":"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","names":["Observable","Amplify","browserOrNode","ConsoleLogger","Logger","INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","AWSAppSyncProvider","AWSAppSyncRealTimeProvider","logger","options","_options","debug","_pluggables","subscribe","bind","Object","PubSubClass","_awsAppSyncProvider","_awsAppSyncRealTimeProvider","opt","PubSub","assign","map","configure","_this","pluggable","getCategory","push","config","providerName","filter","getProviderName","awsAppSyncProvider","awsAppSyncRealTimeProvider","find","provider","getProviderByName","Error","topics","msg","Promise","all","getProviders","publish","isNode","ssr","providers","observables","observable","subscriptions","_a","start","console","error","next","value","forEach","unsubscribe","register"],"sourceRoot":"","sources":["../src/PubSub.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}