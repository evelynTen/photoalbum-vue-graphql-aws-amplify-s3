{"ast":null,"code":"/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createAlbum = /* GraphQL */`\n  mutation CreateAlbum(\n    $input: CreateAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    createAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const updateAlbum = /* GraphQL */`\n  mutation UpdateAlbum(\n    $input: UpdateAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    updateAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const deleteAlbum = /* GraphQL */`\n  mutation DeleteAlbum(\n    $input: DeleteAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    deleteAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const createPhoto = /* GraphQL */`\n  mutation CreatePhoto(\n    $input: CreatePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    createPhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const deletePhoto = /* GraphQL */`\n  mutation DeletePhoto(\n    $input: DeletePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    deletePhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const updatePhoto = /* GraphQL */`\n  mutation UpdatePhoto(\n    $input: UpdatePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    updatePhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;","map":{"version":3,"names":["createAlbum","updateAlbum","deleteAlbum","createPhoto","deletePhoto","updatePhoto"],"sources":["/Users/evelynliu/VSCodeProjects/photobook/src/graphql/mutations.js"],"sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createAlbum = /* GraphQL */ `\n  mutation CreateAlbum(\n    $input: CreateAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    createAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const updateAlbum = /* GraphQL */ `\n  mutation UpdateAlbum(\n    $input: UpdateAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    updateAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const deleteAlbum = /* GraphQL */ `\n  mutation DeleteAlbum(\n    $input: DeleteAlbumInput!\n    $condition: ModelAlbumConditionInput\n  ) {\n    deleteAlbum(input: $input, condition: $condition) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const createPhoto = /* GraphQL */ `\n  mutation CreatePhoto(\n    $input: CreatePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    createPhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const deletePhoto = /* GraphQL */ `\n  mutation DeletePhoto(\n    $input: DeletePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    deletePhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const updatePhoto = /* GraphQL */ `\n  mutation UpdatePhoto(\n    $input: UpdatePhotoInput!\n    $condition: ModelPhotoConditionInput\n  ) {\n    updatePhoto(input: $input, condition: $condition) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,aAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}