{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";gCAEQA,oBAEK;oBAFLC,UAEK;;uBAHTC,oBAIM","names":["_createElementVNode","_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/evelynliu/VSCodeProjects/photobook/src/views/SignUpPage.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>\n\n        </h3>\n    </div>\n</template>\n\n<script>\nimport { confirmSignUp } from '@aws-amplify/ui-vue';\n\n    export default {\n        data: () => ({\n            username: '',\n            password: '',\n            email: '',\n            error: '',\n            confirmPassword: false,\n            code: '',\n        }),\n        methods: {\n            async signUp(){\n                if(!this.email || !this.password){\n                    return;\n                }\n                try {\n                    await this.$store.dispatch(\"auth/signUp\", {\n                        username: this.username,\n                        password: this.password,\n                        email: this.email\n                    });\n\n                    this.confirmPassword = true;\n                } catch (error) {\n                    this.error = error;\n                }\n            },\n            async confirmSignUp(){\n                if(!this.username || !this.code) {\n                    return;\n                }\n                try {\n                    const {username, password, code} = this;\n                    await this.$store.dispatch(\"auth/confirmSighUp\", {\n                        username,\n                        code,\n                    });\n                    await this.$store.dispatch(\"auth/login\", {\n                        username,\n                        password,\n                    })\n                    this.$router.push(\"/albums\");\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}