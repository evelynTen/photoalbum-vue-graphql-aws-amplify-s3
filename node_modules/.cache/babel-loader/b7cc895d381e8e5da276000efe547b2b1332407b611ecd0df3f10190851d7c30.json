{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteStreamProcessorRequest, DeleteStreamProcessorResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1DeleteStreamProcessorCommand, serializeAws_json1_1DeleteStreamProcessorCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Deletes the stream processor identified by <code>Name</code>. You assign the value for <code>Name</code> when you create the stream processor with\n *             <a>CreateStreamProcessor</a>. You might not be able to use the same name for a stream processor for a few seconds after calling <code>DeleteStreamProcessor</code>.</p>\n */\nvar DeleteStreamProcessorCommand = /** @class */function (_super) {\n  __extends(DeleteStreamProcessorCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DeleteStreamProcessorCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DeleteStreamProcessorCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"RekognitionClient\";\n    var commandName = \"DeleteStreamProcessorCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteStreamProcessorRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteStreamProcessorResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DeleteStreamProcessorCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DeleteStreamProcessorCommand(input, context);\n  };\n  DeleteStreamProcessorCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DeleteStreamProcessorCommand(output, context);\n  };\n  return DeleteStreamProcessorCommand;\n}($Command);\nexport { DeleteStreamProcessorCommand };","map":{"version":3,"mappings":";AACA,SAASA,4BAA4B,EAAEC,6BAA6B,QAAQ,oBAAoB;AAChG,SACEC,kDAAkD,EAClDC,gDAAgD,QAC3C,0BAA0B;AACjC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;AAIA;EAAkDC;EAKhD;EACA;EAEA,sCAAqBC,KAAwC;IAA7D;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,wDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAA8C,EAC9CC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IAEzF,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,mBAAmB;IACtC,IAAMC,WAAW,GAAG,8BAA8B;IAClD,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,4BAA4B,CAAC0B,kBAAkB;MACxEC,wBAAwB,EAAE1B,6BAA6B,CAACyB;KACzD;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,gDAAS,GAAjB,UAAkBH,KAAwC,EAAEuB,OAAuB;IACjF,OAAO5B,gDAAgD,CAACK,KAAK,EAAEuB,OAAO,CAAC;EACzE,CAAC;EAEOpB,kDAAW,GAAnB,UAAoBqB,MAAsB,EAAED,OAAuB;IACjE,OAAO7B,kDAAkD,CAAC8B,MAAM,EAAED,OAAO,CAAC;EAC5E,CAAC;EAIH,mCAAC;AAAD,CAAC,CAtDiDzB,QAAQ","names":["DeleteStreamProcessorRequest","DeleteStreamProcessorResponse","deserializeAws_json1_1DeleteStreamProcessorCommand","serializeAws_json1_1DeleteStreamProcessorCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteStreamProcessorCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sourceRoot":"","sources":["../../../commands/DeleteStreamProcessorCommand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}