{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated\n *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the\n *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>\n *          <p>You can use CloudWatch Logs to:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <b>Monitor logs from EC2 instances in real-time</b>: You\n *           can use CloudWatch Logs to monitor applications and systems using log data. For example,\n *           CloudWatch Logs can track the number of errors that occur in your application logs and\n *           send you a notification whenever the rate of errors exceeds a threshold that you specify.\n *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For\n *           example, you can monitor application logs for specific literal terms (such as\n *           \"NullReferenceException\") or count the number of occurrences of a literal term at a\n *           particular position in log data (such as \"404\" status codes in an Apache access log). When\n *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch\n *           metric that you specify.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Monitor AWS CloudTrail logged events</b>: You can\n *           create alarms in CloudWatch and receive notifications of particular API activity as\n *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Archive log data</b>: You can use CloudWatch Logs to\n *           store your log data in highly durable storage. You can change the log retention setting so\n *           that any log events older than this setting are automatically deleted. The CloudWatch Logs\n *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host\n *           and into the log service. You can then access the raw log data when you need it.</p>\n *             </li>\n *          </ul>\n */\nvar CloudWatchLogsClient = /** @class */function (_super) {\n  __extends(CloudWatchLogsClient, _super);\n  function CloudWatchLogsClient(configuration) {\n    var _this = this;\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n    var _config_1 = resolveRegionConfig(_config_0);\n    var _config_2 = resolveEndpointsConfig(_config_1);\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n    var _config_4 = resolveRetryConfig(_config_3);\n    var _config_5 = resolveHostHeaderConfig(_config_4);\n    var _config_6 = resolveUserAgentConfig(_config_5);\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n    return _this;\n  }\n  CloudWatchLogsClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n  return CloudWatchLogsClient;\n}(__Client);\nexport { CloudWatchLogsClient };","map":{"version":3,"mappings":";AA8EA,SAASA,mBAAmB,IAAIC,qBAAqB,QAAQ,iBAAiB;AAC9E,SAKEC,sBAAsB,EACtBC,mBAAmB,QACd,0BAA0B;AACjC,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAGEC,mBAAmB,EACnBC,uBAAuB,QAClB,iCAAiC;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAAgDC,cAAc,EAAEC,kBAAkB,QAAQ,2BAA2B;AACrH,SAGEC,gBAAgB,EAChBC,oBAAoB,QACf,6BAA6B;AACpC,SAGEC,kBAAkB,EAClBC,sBAAsB,QACjB,gCAAgC;AAEvC,SACEC,MAAM,IAAIC,QAAQ,QAGb,wBAAwB;AA0N/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;EAA0CC;EAQxC,8BAAYC,aAAyC;IAArD;IACE,IAAIC,SAAS,yBACRjB,qBAAqB,GACrBgB,aAAa,CACjB;IACD,IAAIE,SAAS,GAAGhB,mBAAmB,CAACe,SAAS,CAAC;IAC9C,IAAIE,SAAS,GAAGlB,sBAAsB,CAACiB,SAAS,CAAC;IACjD,IAAIE,SAAS,GAAGV,oBAAoB,CAACS,SAAS,CAAC;IAC/C,IAAIE,SAAS,GAAGb,kBAAkB,CAACY,SAAS,CAAC;IAC7C,IAAIE,SAAS,GAAGjB,uBAAuB,CAACgB,SAAS,CAAC;IAClD,IAAIE,SAAS,GAAGX,sBAAsB,CAACU,SAAS,CAAC;IACjDE,0BAAMD,SAAS,CAAC;IAChBC,KAAI,CAACC,MAAM,GAAGF,SAAS;IACvBC,KAAI,CAACE,eAAe,CAACC,GAAG,CAAClB,gBAAgB,CAACe,KAAI,CAACC,MAAM,CAAC,CAAC;IACvDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACpB,cAAc,CAACiB,KAAI,CAACC,MAAM,CAAC,CAAC;IACrDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACxB,sBAAsB,CAACqB,KAAI,CAACC,MAAM,CAAC,CAAC;IAC7DD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACvB,mBAAmB,CAACoB,KAAI,CAACC,MAAM,CAAC,CAAC;IAC1DD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACrB,eAAe,CAACkB,KAAI,CAACC,MAAM,CAAC,CAAC;IACtDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAAChB,kBAAkB,CAACa,KAAI,CAACC,MAAM,CAAC,CAAC;;EAC3D;EAEAG,sCAAO,GAAP;IACEC,iBAAMC,OAAO,WAAE;EACjB,CAAC;EACH,2BAAC;AAAD,CAAC,CAhCyChB,QAAQ","names":["ClientDefaultValues","__ClientDefaultValues","resolveEndpointsConfig","resolveRegionConfig","getContentLengthPlugin","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRetryPlugin","resolveRetryConfig","getAwsAuthPlugin","resolveAwsAuthConfig","getUserAgentPlugin","resolveUserAgentConfig","Client","__Client","__extends","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_this","config","middlewareStack","use","CloudWatchLogsClient","_super","destroy"],"sourceRoot":"","sources":["../../CloudWatchLogsClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}