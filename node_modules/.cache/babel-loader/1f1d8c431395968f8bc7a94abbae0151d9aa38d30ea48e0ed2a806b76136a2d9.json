{"ast":null,"code":"/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getAlbum = /* GraphQL */`\n  query GetAlbum($id: ID!) {\n    getAlbum(id: $id) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const listAlbums = /* GraphQL */`\n  query ListAlbums(\n    $filter: ModelAlbumFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAlbums(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getPhoto = /* GraphQL */`\n  query GetPhoto($id: ID!) {\n    getPhoto(id: $id) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const listPhotos = /* GraphQL */`\n  query ListPhotos(\n    $filter: ModelPhotoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPhotos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        createdAt\n        updatedAt\n        album {\n          id\n          owner\n          ownerId\n          name\n          createdAt\n          updatedAt\n          photos {\n            items {\n              id\n              createdAt\n              updatedAt\n              contentType\n              height\n              width\n              size\n              owner\n            }\n            nextToken\n          }\n        }\n        fullsize {\n          region\n          bucket\n          key\n        }\n        thumbnail {\n          region\n          bucket\n          key\n        }\n        contentType\n        gps {\n          latitude\n          longitude\n          altitude\n        }\n        height\n        width\n        size\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const photosByIdAndCreatedAt = /* GraphQL */`\n  query PhotosByIdAndCreatedAt(\n    $id: ID!\n    $createdAt: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPhotoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    photosByIdAndCreatedAt(\n      id: $id\n      createdAt: $createdAt\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        createdAt\n        updatedAt\n        album {\n          id\n          owner\n          ownerId\n          name\n          createdAt\n          updatedAt\n          photos {\n            items {\n              id\n              createdAt\n              updatedAt\n              contentType\n              height\n              width\n              size\n              owner\n            }\n            nextToken\n          }\n        }\n        fullsize {\n          region\n          bucket\n          key\n        }\n        thumbnail {\n          region\n          bucket\n          key\n        }\n        contentType\n        gps {\n          latitude\n          longitude\n          altitude\n        }\n        height\n        width\n        size\n        owner\n      }\n      nextToken\n    }\n  }\n`;","map":{"version":3,"names":["getAlbum","listAlbums","getPhoto","listPhotos","photosByIdAndCreatedAt"],"sources":["/Users/evelynliu/VSCodeProjects/photobook/src/graphql/queries.js"],"sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getAlbum = /* GraphQL */ `\n  query GetAlbum($id: ID!) {\n    getAlbum(id: $id) {\n      id\n      owner\n      ownerId\n      name\n      createdAt\n      updatedAt\n      photos {\n        items {\n          id\n          createdAt\n          updatedAt\n          album {\n            id\n            owner\n            ownerId\n            name\n            createdAt\n            updatedAt\n            photos {\n              nextToken\n            }\n          }\n          fullsize {\n            region\n            bucket\n            key\n          }\n          thumbnail {\n            region\n            bucket\n            key\n          }\n          contentType\n          gps {\n            latitude\n            longitude\n            altitude\n          }\n          height\n          width\n          size\n          owner\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const listAlbums = /* GraphQL */ `\n  query ListAlbums(\n    $filter: ModelAlbumFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAlbums(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getPhoto = /* GraphQL */ `\n  query GetPhoto($id: ID!) {\n    getPhoto(id: $id) {\n      id\n      createdAt\n      updatedAt\n      album {\n        id\n        owner\n        ownerId\n        name\n        createdAt\n        updatedAt\n        photos {\n          items {\n            id\n            createdAt\n            updatedAt\n            album {\n              id\n              owner\n              ownerId\n              name\n              createdAt\n              updatedAt\n            }\n            fullsize {\n              region\n              bucket\n              key\n            }\n            thumbnail {\n              region\n              bucket\n              key\n            }\n            contentType\n            gps {\n              latitude\n              longitude\n              altitude\n            }\n            height\n            width\n            size\n            owner\n          }\n          nextToken\n        }\n      }\n      fullsize {\n        region\n        bucket\n        key\n      }\n      thumbnail {\n        region\n        bucket\n        key\n      }\n      contentType\n      gps {\n        latitude\n        longitude\n        altitude\n      }\n      height\n      width\n      size\n      owner\n    }\n  }\n`;\nexport const listPhotos = /* GraphQL */ `\n  query ListPhotos(\n    $filter: ModelPhotoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPhotos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        createdAt\n        updatedAt\n        album {\n          id\n          owner\n          ownerId\n          name\n          createdAt\n          updatedAt\n          photos {\n            items {\n              id\n              createdAt\n              updatedAt\n              contentType\n              height\n              width\n              size\n              owner\n            }\n            nextToken\n          }\n        }\n        fullsize {\n          region\n          bucket\n          key\n        }\n        thumbnail {\n          region\n          bucket\n          key\n        }\n        contentType\n        gps {\n          latitude\n          longitude\n          altitude\n        }\n        height\n        width\n        size\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const photosByIdAndCreatedAt = /* GraphQL */ `\n  query PhotosByIdAndCreatedAt(\n    $id: ID!\n    $createdAt: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPhotoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    photosByIdAndCreatedAt(\n      id: $id\n      createdAt: $createdAt\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        createdAt\n        updatedAt\n        album {\n          id\n          owner\n          ownerId\n          name\n          createdAt\n          updatedAt\n          photos {\n            items {\n              id\n              createdAt\n              updatedAt\n              contentType\n              height\n              width\n              size\n              owner\n            }\n            nextToken\n          }\n        }\n        fullsize {\n          region\n          bucket\n          key\n        }\n        thumbnail {\n          region\n          bucket\n          key\n        }\n        contentType\n        gps {\n          latitude\n          longitude\n          altitude\n        }\n        height\n        width\n        size\n        owner\n      }\n      nextToken\n    }\n  }\n`;\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,aAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,UAAU,GAAG,aAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAG,aAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,UAAU,GAAG,aAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,sBAAsB,GAAG,aAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}