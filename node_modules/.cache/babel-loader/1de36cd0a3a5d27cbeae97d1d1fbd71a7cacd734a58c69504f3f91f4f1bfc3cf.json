{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TextractClient } from \"./TextractClient\";\nimport { AnalyzeDocumentCommand } from \"./commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommand } from \"./commands/DetectDocumentTextCommand\";\nimport { GetDocumentAnalysisCommand } from \"./commands/GetDocumentAnalysisCommand\";\nimport { GetDocumentTextDetectionCommand } from \"./commands/GetDocumentTextDetectionCommand\";\nimport { StartDocumentAnalysisCommand } from \"./commands/StartDocumentAnalysisCommand\";\nimport { StartDocumentTextDetectionCommand } from \"./commands/StartDocumentTextDetectionCommand\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar Textract = /** @class */function (_super) {\n  __extends(Textract, _super);\n  function Textract() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Textract.prototype.analyzeDocument = function (args, optionsOrCb, cb) {\n    var command = new AnalyzeDocumentCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.detectDocumentText = function (args, optionsOrCb, cb) {\n    var command = new DetectDocumentTextCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.getDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentAnalysisCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.getDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentTextDetectionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.startDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentAnalysisCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  Textract.prototype.startDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentTextDetectionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  return Textract;\n}(TextractClient);\nexport { Textract };","map":{"version":3,"mappings":"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","names":["TextractClient","AnalyzeDocumentCommand","DetectDocumentTextCommand","GetDocumentAnalysisCommand","GetDocumentTextDetectionCommand","StartDocumentAnalysisCommand","StartDocumentTextDetectionCommand","__extends","Textract","args","optionsOrCb","cb","command","send","Error"],"sourceRoot":"","sources":["../../Textract.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}