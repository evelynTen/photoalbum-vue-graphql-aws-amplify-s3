{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport Observable from 'zen-observable-ts';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ReachabilityMonitor } from './datastoreReachability';\nvar logger = new Logger('DataStore');\nvar RECONNECTING_IN = 5000; // 5s this may be configurable in the future\nvar DataStoreConnectivity = /** @class */function () {\n  function DataStoreConnectivity() {\n    this.connectionStatus = {\n      online: false\n    };\n  }\n  DataStoreConnectivity.prototype.status = function () {\n    var _this = this;\n    if (this.observer) {\n      throw new Error('Subscriber already exists');\n    }\n    return new Observable(function (observer) {\n      _this.observer = observer;\n      // Will be used to forward socket connection changes, enhancing Reachability\n      _this.subscription = ReachabilityMonitor.subscribe(function (_a) {\n        var online = _a.online;\n        _this.connectionStatus.online = online;\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        observer.next(observerResult);\n      });\n      return function () {\n        clearTimeout(_this.timeout);\n        _this.unsubscribe();\n      };\n    });\n  };\n  DataStoreConnectivity.prototype.unsubscribe = function () {\n    if (this.subscription) {\n      clearTimeout(this.timeout);\n      this.subscription.unsubscribe();\n    }\n  };\n  // for consistency with other background processors.\n  DataStoreConnectivity.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.unsubscribe();\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  DataStoreConnectivity.prototype.socketDisconnected = function () {\n    var _this = this;\n    if (this.observer && typeof this.observer.next === 'function') {\n      this.observer.next({\n        online: false\n      }); // Notify network issue from the socket\n      this.timeout = setTimeout(function () {\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        _this.observer.next(observerResult);\n      }, RECONNECTING_IN); // giving time for socket cleanup and network status stabilization\n    }\n  };\n\n  return DataStoreConnectivity;\n}();\nexport default DataStoreConnectivity;","map":{"version":3,"mappings":";AAAA,OAAOA,UAA6B,MAAM,mBAAmB;AAC7D,SAASC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC3D,SAASC,mBAAmB,QAAQ,yBAAyB;AAE7D,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC,WAAW,CAAC;AAEtC,IAAMG,eAAe,GAAG,IAAI,CAAC,CAAC;AAO9B;EAKC;IACC,IAAI,CAACC,gBAAgB,GAAG;MACvBC,MAAM,EAAE;KACR;EACF;EAEAC,sCAAM,GAAN;IAAA;IACC,IAAI,IAAI,CAACC,QAAQ,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;IAE7C,OAAO,IAAIV,UAAU,CAAC,UAACS,QAAQ;MAC9BE,KAAI,CAACF,QAAQ,GAAGA,QAAQ;MACxB;MAEAE,KAAI,CAACC,YAAY,GAAGT,mBAAmB,CAACU,SAAS,CAAC,UAACC,EAAU;YAARP,kBAAM;QAC1DI,KAAI,CAACL,gBAAgB,CAACC,MAAM,GAAGA,MAAM;QAErC,IAAMQ,cAAc,gBAAQJ,KAAI,CAACL,gBAAgB,CAAE,CAAC,CAAC;QAErDG,QAAQ,CAACO,IAAI,CAACD,cAAc,CAAC;MAC9B,CAAC,CAAC;MAEF,OAAO;QACNE,YAAY,CAACN,KAAI,CAACO,OAAO,CAAC;QAC1BP,KAAI,CAACQ,WAAW,EAAE;MACnB,CAAC;IACF,CAAC,CAAC;EACH,CAAC;EAEDX,2CAAW,GAAX;IACC,IAAI,IAAI,CAACI,YAAY,EAAE;MACtBK,YAAY,CAAC,IAAI,CAACC,OAAO,CAAC;MAC1B,IAAI,CAACN,YAAY,CAACO,WAAW,EAAE;;EAEjC,CAAC;EAED;EACMX,oCAAI,GAAV;;;QACC,IAAI,CAACW,WAAW,EAAE;QAClB;;;GACA;;EAEDX,kDAAkB,GAAlB;IAAA;IACC,IAAI,IAAI,CAACC,QAAQ,IAAI,OAAO,IAAI,CAACA,QAAQ,CAACO,IAAI,KAAK,UAAU,EAAE;MAC9D,IAAI,CAACP,QAAQ,CAACO,IAAI,CAAC;QAAET,MAAM,EAAE;MAAK,CAAE,CAAC,CAAC,CAAC;MAEvC,IAAI,CAACW,OAAO,GAAGE,UAAU,CAAC;QACzB,IAAML,cAAc,gBAAQJ,KAAI,CAACL,gBAAgB,CAAE,CAAC,CAAC;QACrDK,KAAI,CAACF,QAAQ,CAACO,IAAI,CAACD,cAAc,CAAC;MACnC,CAAC,EAAEV,eAAe,CAAC,CAAC,CAAC;;EAEvB,CAAC;;EACF,4BAAC;AAAD,CAAC,EAzDD","names":["Observable","ConsoleLogger","Logger","ReachabilityMonitor","logger","RECONNECTING_IN","connectionStatus","online","DataStoreConnectivity","observer","Error","_this","subscription","subscribe","_a","observerResult","next","clearTimeout","timeout","unsubscribe","setTimeout"],"sourceRoot":"","sources":["../../src/sync/datastoreConnectivity.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}