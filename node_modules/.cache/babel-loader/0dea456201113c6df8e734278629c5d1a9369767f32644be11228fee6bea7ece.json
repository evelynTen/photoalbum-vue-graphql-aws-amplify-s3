{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Comprehend is an AWS service for gaining insight into the content of documents.\n *       Use these actions to determine the topics contained in your documents, the topics they\n *       discuss, the predominant sentiment expressed in them, the predominant language used, and\n *       more.</p>\n */\nvar ComprehendClient = /** @class */function (_super) {\n  __extends(ComprehendClient, _super);\n  function ComprehendClient(configuration) {\n    var _this = this;\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n    var _config_1 = resolveRegionConfig(_config_0);\n    var _config_2 = resolveEndpointsConfig(_config_1);\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n    var _config_4 = resolveRetryConfig(_config_3);\n    var _config_5 = resolveHostHeaderConfig(_config_4);\n    var _config_6 = resolveUserAgentConfig(_config_5);\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n    return _this;\n  }\n  ComprehendClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n  return ComprehendClient;\n}(__Client);\nexport { ComprehendClient };","map":{"version":3,"mappings":";AAsMA,SAASA,mBAAmB,IAAIC,qBAAqB,QAAQ,iBAAiB;AAC9E,SAKEC,sBAAsB,EACtBC,mBAAmB,QACd,0BAA0B;AACjC,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAGEC,mBAAmB,EACnBC,uBAAuB,QAClB,iCAAiC;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAAgDC,cAAc,EAAEC,kBAAkB,QAAQ,2BAA2B;AACrH,SAGEC,gBAAgB,EAChBC,oBAAoB,QACf,6BAA6B;AACpC,SAGEC,kBAAkB,EAClBC,sBAAsB,QACjB,gCAAgC;AAEvC,SACEC,MAAM,IAAIC,QAAQ,QAGb,wBAAwB;AA8P/B;;;;;;AAMA;EAAsCC;EAQpC,0BAAYC,aAAqC;IAAjD;IACE,IAAIC,SAAS,yBACRjB,qBAAqB,GACrBgB,aAAa,CACjB;IACD,IAAIE,SAAS,GAAGhB,mBAAmB,CAACe,SAAS,CAAC;IAC9C,IAAIE,SAAS,GAAGlB,sBAAsB,CAACiB,SAAS,CAAC;IACjD,IAAIE,SAAS,GAAGV,oBAAoB,CAACS,SAAS,CAAC;IAC/C,IAAIE,SAAS,GAAGb,kBAAkB,CAACY,SAAS,CAAC;IAC7C,IAAIE,SAAS,GAAGjB,uBAAuB,CAACgB,SAAS,CAAC;IAClD,IAAIE,SAAS,GAAGX,sBAAsB,CAACU,SAAS,CAAC;IACjDE,0BAAMD,SAAS,CAAC;IAChBC,KAAI,CAACC,MAAM,GAAGF,SAAS;IACvBC,KAAI,CAACE,eAAe,CAACC,GAAG,CAAClB,gBAAgB,CAACe,KAAI,CAACC,MAAM,CAAC,CAAC;IACvDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACpB,cAAc,CAACiB,KAAI,CAACC,MAAM,CAAC,CAAC;IACrDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACxB,sBAAsB,CAACqB,KAAI,CAACC,MAAM,CAAC,CAAC;IAC7DD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACvB,mBAAmB,CAACoB,KAAI,CAACC,MAAM,CAAC,CAAC;IAC1DD,KAAI,CAACE,eAAe,CAACC,GAAG,CAACrB,eAAe,CAACkB,KAAI,CAACC,MAAM,CAAC,CAAC;IACtDD,KAAI,CAACE,eAAe,CAACC,GAAG,CAAChB,kBAAkB,CAACa,KAAI,CAACC,MAAM,CAAC,CAAC;;EAC3D;EAEAG,kCAAO,GAAP;IACEC,iBAAMC,OAAO,WAAE;EACjB,CAAC;EACH,uBAAC;AAAD,CAAC,CAhCqChB,QAAQ","names":["ClientDefaultValues","__ClientDefaultValues","resolveEndpointsConfig","resolveRegionConfig","getContentLengthPlugin","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRetryPlugin","resolveRetryConfig","getAwsAuthPlugin","resolveAwsAuthConfig","getUserAgentPlugin","resolveUserAgentConfig","Client","__Client","__extends","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_this","config","middlewareStack","use","ComprehendClient","_super","destroy"],"sourceRoot":"","sources":["../../ComprehendClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}