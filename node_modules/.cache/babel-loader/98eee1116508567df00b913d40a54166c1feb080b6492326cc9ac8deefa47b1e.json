{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __asyncValues, __awaiter, __generator, __read, __spread, __values } from \"tslib\";\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { isPredicateObj, isPredicateGroup, OpType, QueryOne } from '../../types';\nimport { getIndex, getIndexFromAssociation, isModelConstructor, isPrivateMode, traverseModel, validatePredicate, inMemoryPagination, keysEqual, getStorename, getIndexKeys, extractPrimaryKeyValues, isSafariCompatabilityMode } from '../../util';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\nvar IndexedDBAdapter = /** @class */function () {\n  function IndexedDBAdapter() {\n    var _this = this;\n    this.dbName = DB_NAME;\n    this.safariCompatabilityMode = false;\n    /**\n     * Checks the given path against the browser's IndexedDB implementation for\n     * necessary compatibility transformations, applying those transforms if needed.\n     *\n     * @param `keyArr` strings to compatibilize for browser-indexeddb index operations\n     * @returns An array or string, depending on and given key,\n     * that is ensured to be compatible with the IndexedDB implementation's nuances.\n     */\n    this.canonicalKeyPath = function (keyArr) {\n      if (_this.safariCompatabilityMode) {\n        return keyArr.length > 1 ? keyArr : keyArr[0];\n      }\n      return keyArr;\n    };\n  }\n  IndexedDBAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return getStorename(namespace, modelName);\n  };\n  // Retrieves primary key values from a model\n  IndexedDBAdapter.prototype.getIndexKeyValuesFromModel = function (model) {\n    var modelConstructor = Object.getPrototypeOf(model).constructor;\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var keys = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n    return extractPrimaryKeyValues(model, keys);\n  };\n  IndexedDBAdapter.prototype.checkPrivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPrivate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, isPrivateMode().then(function (isPrivate) {\n              return isPrivate;\n            })];\n          case 1:\n            isPrivate = _a.sent();\n            if (isPrivate) {\n              logger.error(\"IndexedDB not supported in this browser's private mode\");\n              return [2 /*return*/, Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n            } else {\n              return [2 /*return*/, Promise.resolve()];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Whether the browser's implementation of IndexedDB is coercing single-field\n   * indexes to a scalar key.\n   *\n   * If this returns `true`, we need to treat indexes containing a single field\n   * as scalars.\n   *\n   * See PR description for reference:\n   * https://github.com/aws-amplify/amplify-js/pull/10527\n   */\n  IndexedDBAdapter.prototype.setSafariCompatabilityMode = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4 /*yield*/, isSafariCompatabilityMode()];\n          case 1:\n            _a.safariCompatabilityMode = _b.sent();\n            if (this.safariCompatabilityMode === true) {\n              logger.debug('IndexedDB Adapter is running in Safari Compatability Mode');\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getNamespaceAndModelFromStorename = function (storeName) {\n    var _a = __read(storeName.split('_')),\n      namespaceName = _a[0],\n      modelNameArr = _a.slice(1);\n    return {\n      namespaceName: namespaceName,\n      modelName: modelNameArr.join('_')\n    };\n  };\n  IndexedDBAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var VERSION, _a, error_1;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            return [4 /*yield*/, this.setSafariCompatabilityMode()];\n          case 2:\n            _b.sent();\n            if (!!this.initPromise) return [3 /*break*/, 3];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, this.initPromise];\n          case 4:\n            _b.sent();\n            _b.label = 5;\n          case 5:\n            if (sessionId) {\n              this.dbName = DB_NAME + \"-\" + sessionId;\n            }\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _b.label = 6;\n          case 6:\n            _b.trys.push([6, 9,, 10]);\n            if (!!this.db) return [3 /*break*/, 8];\n            VERSION = 3;\n            _a = this;\n            return [4 /*yield*/, idb.openDB(this.dbName, VERSION, {\n              upgrade: function (db, oldVersion, newVersion, txn) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, _b, storeName, origStore, tmpName, _c, namespaceName, modelName, modelInCurrentSchema, newStore, cursor, count, e_1_1, error_2;\n                  var e_1, _d;\n                  var _this = this;\n                  return __generator(this, function (_e) {\n                    switch (_e.label) {\n                      case 0:\n                        if (oldVersion === 0) {\n                          Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                            var namespace = theSchema.namespaces[namespaceName];\n                            Object.keys(namespace.models).forEach(function (modelName) {\n                              var storeName = getStorename(namespaceName, modelName);\n                              _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                            });\n                          });\n                          return [2 /*return*/];\n                        }\n\n                        if (!((oldVersion === 1 || oldVersion === 2) && newVersion === 3)) return [3 /*break*/, 16];\n                        _e.label = 1;\n                      case 1:\n                        _e.trys.push([1, 14,, 15]);\n                        _e.label = 2;\n                      case 2:\n                        _e.trys.push([2, 11, 12, 13]);\n                        _a = __values(txn.objectStoreNames), _b = _a.next();\n                        _e.label = 3;\n                      case 3:\n                        if (!!_b.done) return [3 /*break*/, 10];\n                        storeName = _b.value;\n                        origStore = txn.objectStore(storeName);\n                        tmpName = \"tmp_\" + storeName;\n                        origStore.name = tmpName;\n                        _c = this.getNamespaceAndModelFromStorename(storeName), namespaceName = _c.namespaceName, modelName = _c.modelName;\n                        modelInCurrentSchema = modelName in this.schema.namespaces[namespaceName].models;\n                        if (!modelInCurrentSchema) {\n                          // delete original\n                          db.deleteObjectStore(tmpName);\n                          return [3 /*break*/, 9];\n                        }\n                        newStore = this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                        return [4 /*yield*/, origStore.openCursor()];\n                      case 4:\n                        cursor = _e.sent();\n                        count = 0;\n                        _e.label = 5;\n                      case 5:\n                        if (!(cursor && cursor.value)) return [3 /*break*/, 8];\n                        // we don't pass key, since they are all new entries in the new store\n                        return [4 /*yield*/, newStore.put(cursor.value)];\n                      case 6:\n                        // we don't pass key, since they are all new entries in the new store\n                        _e.sent();\n                        return [4 /*yield*/, cursor.continue()];\n                      case 7:\n                        cursor = _e.sent();\n                        count++;\n                        return [3 /*break*/, 5];\n                      case 8:\n                        // delete original\n                        db.deleteObjectStore(tmpName);\n                        logger.debug(count + \" \" + storeName + \" records migrated\");\n                        _e.label = 9;\n                      case 9:\n                        _b = _a.next();\n                        return [3 /*break*/, 3];\n                      case 10:\n                        return [3 /*break*/, 13];\n                      case 11:\n                        e_1_1 = _e.sent();\n                        e_1 = {\n                          error: e_1_1\n                        };\n                        return [3 /*break*/, 13];\n                      case 12:\n                        try {\n                          if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        } finally {\n                          if (e_1) throw e_1.error;\n                        }\n                        return [7 /*endfinally*/];\n                      case 13:\n                        // add new models created after IndexedDB, but before migration\n                        // this case may happen when a user has not opened an app for\n                        // some time and a new model is added during that time\n                        Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                          var namespace = theSchema.namespaces[namespaceName];\n                          var objectStoreNames = new Set(txn.objectStoreNames);\n                          Object.keys(namespace.models).map(function (modelName) {\n                            return [modelName, getStorename(namespaceName, modelName)];\n                          }).filter(function (_a) {\n                            var _b = __read(_a, 2),\n                              storeName = _b[1];\n                            return !objectStoreNames.has(storeName);\n                          }).forEach(function (_a) {\n                            var _b = __read(_a, 2),\n                              modelName = _b[0],\n                              storeName = _b[1];\n                            _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                          });\n                        });\n                        return [3 /*break*/, 15];\n                      case 14:\n                        error_2 = _e.sent();\n                        logger.error('Error migrating IndexedDB data', error_2);\n                        txn.abort();\n                        throw error_2;\n                      case 15:\n                        return [2 /*return*/];\n                      case 16:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              }\n            })];\n\n          case 7:\n            _a.db = _b.sent();\n            this.resolve();\n            _b.label = 8;\n          case 8:\n            return [3 /*break*/, 10];\n          case 9:\n            error_1 = _b.sent();\n            this.reject(error_1);\n            return [3 /*break*/, 10];\n          case 10:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype._get = function (storeOrStoreName, keyArr) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, storeName, store, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof storeOrStoreName === 'string') {\n              storeName = storeOrStoreName;\n              index = this.db.transaction(storeName, 'readonly').store.index('byPk');\n            } else {\n              store = storeOrStoreName;\n              index = store.index('byPk');\n            }\n            return [4 /*yield*/, index.get(this.canonicalKeyPath(keyArr))];\n          case 1:\n            result = _a.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.save = function (model, condition) {\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var modelConstructor, storeName, namespaceName, connectedModels, set, connectionStoreNames, tx, store, keyValues, fromDB, predicates, _b, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, keys, store_1, itemKeyValues, fromDB_1, opType, modelKeyValues, key, e_2_1;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _c.sent();\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[namespaceName], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            set = new Set();\n            connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n              var modelName = _a.modelName,\n                item = _a.item,\n                instance = _a.instance;\n              var storeName = getStorename(namespaceName, modelName);\n              set.add(storeName);\n              var keys = getIndexKeys(_this.schema.namespaces[namespaceName], modelName);\n              return {\n                storeName: storeName,\n                item: item,\n                instance: instance,\n                keys: keys\n              };\n            });\n            tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n            store = tx.objectStore(storeName);\n            keyValues = this.getIndexKeyValuesFromModel(model);\n            return [4 /*yield*/, this._get(store, keyValues)];\n          case 2:\n            fromDB = _c.sent();\n            if (condition && fromDB) {\n              predicates = ModelPredicateCreator.getPredicates(condition);\n              _b = predicates || {}, predicateObjs = _b.predicates, type = _b.type;\n              isValid = validatePredicate(fromDB, type, predicateObjs);\n              if (!isValid) {\n                msg = 'Conditional update failed';\n                logger.error(msg, {\n                  model: fromDB,\n                  condition: predicateObjs\n                });\n                throw new Error(msg);\n              }\n            }\n            result = [];\n            _c.label = 3;\n          case 3:\n            _c.trys.push([3, 11, 12, 17]);\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _c.label = 4;\n          case 4:\n            return [4 /*yield*/, connectionStoreNames_1.next()];\n          case 5:\n            if (!(connectionStoreNames_1_1 = _c.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 10];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance, keys = resItem.keys;\n            store_1 = tx.objectStore(storeName_1);\n            itemKeyValues = keys.map(function (key) {\n              var value = item[key];\n              return value;\n            });\n            return [4 /*yield*/, this._get(store_1, itemKeyValues)];\n          case 6:\n            fromDB_1 = _c.sent();\n            opType = fromDB_1 === undefined ? OpType.INSERT : OpType.UPDATE;\n            modelKeyValues = this.getIndexKeyValuesFromModel(model);\n            if (!(keysEqual(itemKeyValues, modelKeyValues) || opType === OpType.INSERT)) return [3 /*break*/, 9];\n            return [4 /*yield*/, store_1.index('byPk').getKey(this.canonicalKeyPath(itemKeyValues))];\n          case 7:\n            key = _c.sent();\n            return [4 /*yield*/, store_1.put(item, key)];\n          case 8:\n            _c.sent();\n            result.push([instance, opType]);\n            _c.label = 9;\n          case 9:\n            return [3 /*break*/, 4];\n          case 10:\n            return [3 /*break*/, 17];\n          case 11:\n            e_2_1 = _c.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 17];\n          case 12:\n            _c.trys.push([12,, 15, 16]);\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3 /*break*/, 14];\n            return [4 /*yield*/, _a.call(connectionStoreNames_1)];\n          case 13:\n            _c.sent();\n            _c.label = 14;\n          case 14:\n            return [3 /*break*/, 16];\n          case 15:\n            if (e_2) throw e_2.error;\n            return [7 /*endfinally*/];\n          case 16:\n            return [7 /*endfinally*/];\n          case 17:\n            return [4 /*yield*/, tx.done];\n          case 18:\n            _c.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor;\n      var _this = this;\n      return __generator(this, function (_a) {\n        namespace = this.schema.namespaces[namespaceName];\n        relations = namespace.relationships[srcModelName].relationTypes;\n        connectionStoreNames = relations.map(function (_a) {\n          var modelName = _a.modelName;\n          return getStorename(namespaceName, modelName);\n        });\n        modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n        if (connectionStoreNames.length === 0) {\n          return [2 /*return*/, records.map(function (record) {\n            return _this.modelInstanceCreator(modelConstructor, record);\n          })];\n        }\n        return [2 /*return*/, records.map(function (record) {\n          return _this.modelInstanceCreator(modelConstructor, record);\n        })];\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, namespaceName, predicates, keyPath, queryByKey, hasSort, hasPagination, records;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n            keyPath = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n            queryByKey = predicates && this.keyValueFromPredicate(predicates, keyPath);\n            hasSort = pagination && pagination.sort;\n            hasPagination = pagination && pagination.limit;\n            return [4 /*yield*/, function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryByKey) return [3 /*break*/, 2];\n                      return [4 /*yield*/, this.getByKey(storeName, queryByKey)];\n                    case 1:\n                      record = _a.sent();\n                      return [2 /*return*/, record ? [record] : []];\n                    case 2:\n                      if (!predicates) return [3 /*break*/, 4];\n                      return [4 /*yield*/, this.filterOnPredicate(storeName, predicates)];\n                    case 3:\n                      filtered = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(filtered, pagination)];\n                    case 4:\n                      if (!hasSort) return [3 /*break*/, 6];\n                      return [4 /*yield*/, this.getAll(storeName)];\n                    case 5:\n                      all = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(all, pagination)];\n                    case 6:\n                      if (hasPagination) {\n                        return [2 /*return*/, this.enginePagination(storeName, pagination)];\n                      }\n                      return [2 /*return*/, this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n          case 2:\n            records = _a.sent();\n            return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.getByKey = function (storeName, keyValue) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._get(storeName, keyValue)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.keyValueFromPredicate = function (predicates, keyPath) {\n    var e_3, _a;\n    var predicateObjs = predicates.predicates;\n    if (predicateObjs.length !== keyPath.length) {\n      return;\n    }\n    var keyValues = [];\n    var _loop_1 = function (key) {\n      var predicateObj = predicateObjs.find(function (p) {\n        return isPredicateObj(p) && p.field === key && p.operator === 'eq';\n      });\n      predicateObj && keyValues.push(predicateObj.operand);\n    };\n    try {\n      for (var keyPath_1 = __values(keyPath), keyPath_1_1 = keyPath_1.next(); !keyPath_1_1.done; keyPath_1_1 = keyPath_1.next()) {\n        var key = keyPath_1_1.value;\n        _loop_1(key);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (keyPath_1_1 && !keyPath_1_1.done && (_a = keyPath_1.return)) _a.call(keyPath_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    return keyValues.length === keyPath.length ? keyValues : undefined;\n  };\n  IndexedDBAdapter.prototype.matchingIndex = function (storeName, fieldName, transaction) {\n    var e_4, _a;\n    var store = transaction.objectStore(storeName);\n    try {\n      for (var _b = __values(store.indexNames), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        var idx = store.index(name_1);\n        if (idx.keyPath === fieldName) {\n          return idx;\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n  IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, candidateResults, fieldPredicates, txn, predicateIndexes, actualPredicateIndexes, predicateIndex, distinctResults, predicateIndexes_1, predicateIndexes_1_1, predicateIndex, resultGroup, resultGroup_1, resultGroup_1_1, item, e_5_1, filtered;\n      var e_5, _a, e_6, _b;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            // the predicate objects we care about tend to be nested at least\n            // one level down: `{and: {or: {and: { <the predicates we want> }}}}`\n            // so, we unpack and/or groups until we find a group with more than 1\n            // child OR a child that is not a group (and is therefore a predicate \"object\").\n            while (predicateObjs.length === 1 && isPredicateGroup(predicateObjs[0])) {\n              type = predicateObjs[0].type;\n              predicateObjs = predicateObjs[0].predicates;\n            }\n            fieldPredicates = predicateObjs.filter(function (p) {\n              return isPredicateObj(p);\n            });\n            txn = this.db.transaction(storeName);\n            predicateIndexes = fieldPredicates.map(function (p) {\n              return {\n                predicate: p,\n                index: _this.matchingIndex(storeName, String(p.field), txn)\n              };\n            });\n            // Explicitly wait for txns from index queries to complete before proceding.\n            // This helps ensure IndexedDB is in a stable, ready state. Else, subseqeuent\n            // qeuries can sometimes appear to deadlock (at least in FakeIndexedDB).\n            return [4 /*yield*/, txn.done];\n          case 1:\n            // Explicitly wait for txns from index queries to complete before proceding.\n            // This helps ensure IndexedDB is in a stable, ready state. Else, subseqeuent\n            // qeuries can sometimes appear to deadlock (at least in FakeIndexedDB).\n            _c.sent();\n            if (!(type === 'and')) return [3 /*break*/, 6];\n            actualPredicateIndexes = predicateIndexes.filter(function (i) {\n              return i.index && i.predicate.operator === 'eq';\n            });\n            if (!(actualPredicateIndexes.length > 0)) return [3 /*break*/, 3];\n            predicateIndex = actualPredicateIndexes[0];\n            return [4 /*yield*/, predicateIndex.index.getAll(predicateIndex.predicate.operand)];\n          case 2:\n            candidateResults = _c.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, this.getAll(storeName)];\n          case 4:\n            // no usable indexes\n            candidateResults = _c.sent();\n            _c.label = 5;\n          case 5:\n            return [3 /*break*/, 20];\n          case 6:\n            if (!(type === 'or')) return [3 /*break*/, 18];\n            if (!(predicateIndexes.length > 0 && predicateIndexes.every(function (i) {\n              return i.index && i.predicate.operator === 'eq';\n            }))) return [3 /*break*/, 15];\n            distinctResults = new Map();\n            _c.label = 7;\n          case 7:\n            _c.trys.push([7, 12, 13, 14]);\n            predicateIndexes_1 = __values(predicateIndexes), predicateIndexes_1_1 = predicateIndexes_1.next();\n            _c.label = 8;\n          case 8:\n            if (!!predicateIndexes_1_1.done) return [3 /*break*/, 11];\n            predicateIndex = predicateIndexes_1_1.value;\n            return [4 /*yield*/, predicateIndex.index.getAll(predicateIndex.predicate.operand)];\n          case 9:\n            resultGroup = _c.sent();\n            try {\n              for (resultGroup_1 = (e_6 = void 0, __values(resultGroup)), resultGroup_1_1 = resultGroup_1.next(); !resultGroup_1_1.done; resultGroup_1_1 = resultGroup_1.next()) {\n                item = resultGroup_1_1.value;\n                // TODO: custom PK\n                distinctResults.set(item.id, item);\n              }\n            } catch (e_6_1) {\n              e_6 = {\n                error: e_6_1\n              };\n            } finally {\n              try {\n                if (resultGroup_1_1 && !resultGroup_1_1.done && (_b = resultGroup_1.return)) _b.call(resultGroup_1);\n              } finally {\n                if (e_6) throw e_6.error;\n              }\n            }\n            _c.label = 10;\n          case 10:\n            predicateIndexes_1_1 = predicateIndexes_1.next();\n            return [3 /*break*/, 8];\n          case 11:\n            return [3 /*break*/, 14];\n          case 12:\n            e_5_1 = _c.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3 /*break*/, 14];\n          case 13:\n            try {\n              if (predicateIndexes_1_1 && !predicateIndexes_1_1.done && (_a = predicateIndexes_1.return)) _a.call(predicateIndexes_1);\n            } finally {\n              if (e_5) throw e_5.error;\n            }\n            return [7 /*endfinally*/];\n          case 14:\n            // we could conceivably check for special conditions and return early here.\n            // but, this is simpler and has not yet had a measurable performance impact.\n            candidateResults = Array.from(distinctResults.values());\n            return [3 /*break*/, 17];\n          case 15:\n            return [4 /*yield*/, this.getAll(storeName)];\n          case 16:\n            // either no usable indexes or not all conditions can use one.\n            candidateResults = _c.sent();\n            _c.label = 17;\n          case 17:\n            return [3 /*break*/, 20];\n          case 18:\n            return [4 /*yield*/, this.getAll(storeName)];\n          case 19:\n            // nothing intelligent we can do with `not` groups unless or until we start\n            // smashing comparison operators against indexes -- at which point we could\n            // perform some reversal here.\n            candidateResults = _c.sent();\n            _c.label = 20;\n          case 20:\n            filtered = predicateObjs ? candidateResults.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : candidateResults;\n            return [2 /*return*/, filtered];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    return inMemoryPagination(records, pagination);\n  };\n  IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!pagination) return [3 /*break*/, 7];\n            _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            initialRecord = Math.max(0, page * limit) || 0;\n            return [4 /*yield*/, this.db.transaction(storeName).objectStore(storeName).openCursor()];\n          case 1:\n            cursor = _c.sent();\n            if (!(cursor && initialRecord > 0)) return [3 /*break*/, 3];\n            return [4 /*yield*/, cursor.advance(initialRecord)];\n          case 2:\n            _c.sent();\n            _c.label = 3;\n          case 3:\n            pageResults = [];\n            hasLimit = typeof limit === 'number' && limit > 0;\n            _c.label = 4;\n          case 4:\n            if (!(cursor && cursor.value)) return [3 /*break*/, 6];\n            pageResults.push(cursor.value);\n            if (hasLimit && pageResults.length === limit) {\n              return [3 /*break*/, 6];\n            }\n            return [4 /*yield*/, cursor.continue()];\n          case 5:\n            cursor = _c.sent();\n            return [3 /*break*/, 4];\n          case 6:\n            result = pageResults;\n            return [3 /*break*/, 9];\n          case 7:\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 8:\n            result = _c.sent();\n            _c.label = 9;\n          case 9:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, cursor, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4 /*yield*/, this.db.transaction([storeName], 'readonly').objectStore(storeName).openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n          case 2:\n            cursor = _a.sent();\n            result = cursor ? cursor.value : undefined;\n            return [2 /*return*/, result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, nameSpace, storeName, models, relations, deletedModels, deletedModels, model, modelConstructor, namespaceName, storeName, tx, store, keyValues, fromDB, msg, predicates, _a, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 9];\n            modelConstructor = modelOrModelConstructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4 /*yield*/, this.query(modelConstructor, condition)];\n          case 2:\n            models = _b.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            if (!(condition !== undefined)) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 3:\n            _b.sent();\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 4:\n            _b.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 5:\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 6:\n            _b.sent();\n            // Delete all\n            return [4 /*yield*/, this.db.transaction([storeName], 'readwrite').objectStore(storeName).clear()];\n          case 7:\n            // Delete all\n            _b.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 8:\n            return [3 /*break*/, 17];\n          case 9:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            namespaceName = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3 /*break*/, 13];\n            tx = this.db.transaction([storeName], 'readwrite');\n            store = tx.objectStore(storeName);\n            keyValues = this.getIndexKeyValuesFromModel(model);\n            return [4 /*yield*/, this._get(store, keyValues)];\n          case 10:\n            fromDB = _b.sent();\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2 /*return*/, [[model], []]];\n            }\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            _a = predicates, predicateObjs = _a.predicates, type = _a.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n            return [4 /*yield*/, tx.done];\n          case 11:\n            _b.sent();\n            relations = this.schema.namespaces[namespaceName].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, namespaceName, deleteQueue)];\n          case 12:\n            _b.sent();\n            return [3 /*break*/, 15];\n          case 13:\n            relations = this.schema.namespaces[namespaceName].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, namespaceName, deleteQueue)];\n          case 14:\n            _b.sent();\n            _b.label = 15;\n          case 15:\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 16:\n            _b.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [[model], deletedModels]];\n          case 17:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n    var e_7, _a, e_8, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var connectionStoreNames, tx, _c, _d, deleteItem, storeName, items, store, items_1, items_1_1, item, key, keyValues, itemKey, e_8_1, e_7_1;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            connectionStoreNames = deleteQueue.map(function (_a) {\n              var storeName = _a.storeName;\n              return storeName;\n            });\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n            _e.label = 1;\n          case 1:\n            _e.trys.push([1, 22, 23, 28]);\n            _c = __asyncValues(deleteQueue);\n            _e.label = 2;\n          case 2:\n            return [4 /*yield*/, _c.next()];\n          case 3:\n            if (!(_d = _e.sent(), !_d.done)) return [3 /*break*/, 21];\n            deleteItem = _d.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            store = tx.objectStore(storeName);\n            _e.label = 4;\n          case 4:\n            _e.trys.push([4, 14, 15, 20]);\n            items_1 = __asyncValues(items);\n            _e.label = 5;\n          case 5:\n            return [4 /*yield*/, items_1.next()];\n          case 6:\n            if (!(items_1_1 = _e.sent(), !items_1_1.done)) return [3 /*break*/, 13];\n            item = items_1_1.value;\n            if (!item) return [3 /*break*/, 12];\n            key = void 0;\n            if (!(typeof item === 'object')) return [3 /*break*/, 8];\n            keyValues = this.getIndexKeyValuesFromModel(item);\n            return [4 /*yield*/, store.index('byPk').getKey(this.canonicalKeyPath(keyValues))];\n          case 7:\n            key = _e.sent();\n            return [3 /*break*/, 10];\n          case 8:\n            itemKey = item.toString();\n            return [4 /*yield*/, store.index('byPk').getKey(itemKey)];\n          case 9:\n            key = _e.sent();\n            _e.label = 10;\n          case 10:\n            if (!(key !== undefined)) return [3 /*break*/, 12];\n            return [4 /*yield*/, store.delete(key)];\n          case 11:\n            _e.sent();\n            _e.label = 12;\n          case 12:\n            return [3 /*break*/, 5];\n          case 13:\n            return [3 /*break*/, 20];\n          case 14:\n            e_8_1 = _e.sent();\n            e_8 = {\n              error: e_8_1\n            };\n            return [3 /*break*/, 20];\n          case 15:\n            _e.trys.push([15,, 18, 19]);\n            if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3 /*break*/, 17];\n            return [4 /*yield*/, _b.call(items_1)];\n          case 16:\n            _e.sent();\n            _e.label = 17;\n          case 17:\n            return [3 /*break*/, 19];\n          case 18:\n            if (e_8) throw e_8.error;\n            return [7 /*endfinally*/];\n          case 19:\n            return [7 /*endfinally*/];\n          case 20:\n            return [3 /*break*/, 2];\n          case 21:\n            return [3 /*break*/, 28];\n          case 22:\n            e_7_1 = _e.sent();\n            e_7 = {\n              error: e_7_1\n            };\n            return [3 /*break*/, 28];\n          case 23:\n            _e.trys.push([23,, 26, 27]);\n            if (!(_d && !_d.done && (_a = _c.return))) return [3 /*break*/, 25];\n            return [4 /*yield*/, _a.call(_c)];\n          case 24:\n            _e.sent();\n            _e.label = 25;\n          case 25:\n            return [3 /*break*/, 27];\n          case 26:\n            if (e_7) throw e_7.error;\n            return [7 /*endfinally*/];\n          case 27:\n            return [7 /*endfinally*/];\n          case 28:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n    var relations_1, relations_1_1, models_1, models_1_1, models_2, models_2_1;\n    var e_9, _a, e_10, _b, e_11, _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var rel, relationType, modelName, targetName, targetNames, associatedWith, storeName, _d, model, hasOneIndex, values, recordToDelete, index, values, value, recordToDelete, e_10_1, model, index, keyValues, childrenArray, e_11_1, e_9_1;\n      var _this = this;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 38, 39, 44]);\n            relations_1 = __asyncValues(relations);\n            _e.label = 1;\n          case 1:\n            return [4 /*yield*/, relations_1.next()];\n          case 2:\n            if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3 /*break*/, 37];\n            rel = relations_1_1.value;\n            relationType = rel.relationType, modelName = rel.modelName, targetName = rel.targetName, targetNames = rel.targetNames, associatedWith = rel.associatedWith;\n            storeName = getStorename(nameSpace, modelName);\n            _d = relationType;\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3 /*break*/, 3];\n              case 'HAS_MANY':\n                return [3 /*break*/, 20];\n              case 'BELONGS_TO':\n                return [3 /*break*/, 34];\n            }\n            return [3 /*break*/, 35];\n          case 3:\n            _e.trys.push([3, 13, 14, 19]);\n            models_1 = __asyncValues(models);\n            _e.label = 4;\n          case 4:\n            return [4 /*yield*/, models_1.next()];\n          case 5:\n            if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3 /*break*/, 12];\n            model = models_1_1.value;\n            hasOneIndex = 'byPk';\n            if (!(targetNames === null || targetNames === void 0 ? void 0 : targetNames.length)) return [3 /*break*/, 8];\n            values = targetNames.filter(function (targetName) {\n              var _a;\n              return (_a = model[targetName]) !== null && _a !== void 0 ? _a : false;\n            }).map(function (targetName) {\n              return model[targetName];\n            });\n            if (values.length === 0) return [3 /*break*/, 12];\n            return [4 /*yield*/, this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(hasOneIndex).get(this.canonicalKeyPath(values))];\n          case 6:\n            recordToDelete = _e.sent();\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n          case 7:\n            _e.sent();\n            return [3 /*break*/, 12];\n          case 8:\n            index = void 0;\n            values = void 0;\n            if (targetName && targetName in model) {\n              index = hasOneIndex;\n              value = model[targetName];\n              if (value === null) return [3 /*break*/, 12];\n              values = [value];\n            } else {\n              // backwards compatability for older versions of codegen that did not emit targetName for HAS_ONE relations\n              // TODO: can we deprecate this? it's been ~2 years since codegen started including targetName for HAS_ONE\n              // If we deprecate, we'll need to re-gen the MIPR in __tests__/schema.ts > newSchema\n              // otherwise some unit tests will fail\n              index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel);\n              values = this.getIndexKeyValuesFromModel(model);\n            }\n            if (!values || !index) return [3 /*break*/, 12];\n            return [4 /*yield*/, this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(index).get(this.canonicalKeyPath(values))];\n          case 9:\n            recordToDelete = _e.sent();\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n          case 10:\n            _e.sent();\n            _e.label = 11;\n          case 11:\n            return [3 /*break*/, 4];\n          case 12:\n            return [3 /*break*/, 19];\n          case 13:\n            e_10_1 = _e.sent();\n            e_10 = {\n              error: e_10_1\n            };\n            return [3 /*break*/, 19];\n          case 14:\n            _e.trys.push([14,, 17, 18]);\n            if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3 /*break*/, 16];\n            return [4 /*yield*/, _b.call(models_1)];\n          case 15:\n            _e.sent();\n            _e.label = 16;\n          case 16:\n            return [3 /*break*/, 18];\n          case 17:\n            if (e_10) throw e_10.error;\n            return [7 /*endfinally*/];\n          case 18:\n            return [7 /*endfinally*/];\n          case 19:\n            return [3 /*break*/, 36];\n          case 20:\n            _e.trys.push([20, 27, 28, 33]);\n            models_2 = __asyncValues(models);\n            _e.label = 21;\n          case 21:\n            return [4 /*yield*/, models_2.next()];\n          case 22:\n            if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3 /*break*/, 26];\n            model = models_2_1.value;\n            index =\n            // explicit bi-directional @hasMany and @manyToMany\n            getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel) ||\n            // uni and/or implicit @hasMany\n            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, associatedWith);\n            keyValues = this.getIndexKeyValuesFromModel(model);\n            return [4 /*yield*/, this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(index).getAll(this.canonicalKeyPath(keyValues))];\n          case 23:\n            childrenArray = _e.sent();\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n          case 24:\n            _e.sent();\n            _e.label = 25;\n          case 25:\n            return [3 /*break*/, 21];\n          case 26:\n            return [3 /*break*/, 33];\n          case 27:\n            e_11_1 = _e.sent();\n            e_11 = {\n              error: e_11_1\n            };\n            return [3 /*break*/, 33];\n          case 28:\n            _e.trys.push([28,, 31, 32]);\n            if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3 /*break*/, 30];\n            return [4 /*yield*/, _c.call(models_2)];\n          case 29:\n            _e.sent();\n            _e.label = 30;\n          case 30:\n            return [3 /*break*/, 32];\n          case 31:\n            if (e_11) throw e_11.error;\n            return [7 /*endfinally*/];\n          case 32:\n            return [7 /*endfinally*/];\n          case 33:\n            return [3 /*break*/, 36];\n          case 34:\n            // Intentionally blank\n            return [3 /*break*/, 36];\n          case 35:\n            throw new Error(\"Invalid relation type \" + relationType);\n          case 36:\n            return [3 /*break*/, 1];\n          case 37:\n            return [3 /*break*/, 44];\n          case 38:\n            e_9_1 = _e.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3 /*break*/, 44];\n          case 39:\n            _e.trys.push([39,, 42, 43]);\n            if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3 /*break*/, 41];\n            return [4 /*yield*/, _a.call(relations_1)];\n          case 40:\n            _e.sent();\n            _e.label = 41;\n          case 41:\n            return [3 /*break*/, 43];\n          case 42:\n            if (e_9) throw e_9.error;\n            return [7 /*endfinally*/];\n          case 43:\n            return [7 /*endfinally*/];\n          case 44:\n            deleteQueue.push({\n              storeName: getStorename(nameSpace, srcModel),\n              items: models.map(function (record) {\n                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n              })\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.clear = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            (_a = this.db) === null || _a === void 0 ? void 0 : _a.close();\n            return [4 /*yield*/, idb.deleteDB(this.dbName)];\n          case 2:\n            _b.sent();\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, storeName, txn, store, _loop_2, this_1, items_2, items_2_1, item, e_12_1;\n      var e_12, _a;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2 /*return*/, []];\n            }\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            result = [];\n            storeName = this.getStorenameForModel(modelConstructor);\n            txn = this.db.transaction(storeName, 'readwrite');\n            store = txn.store;\n            _loop_2 = function (item) {\n              var namespaceName, modelName, model, connectedModels, keyValues, _deleted, index, key, instance;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    namespaceName = this_1.namespaceResolver(modelConstructor);\n                    modelName = modelConstructor.name;\n                    model = this_1.modelInstanceCreator(modelConstructor, item);\n                    connectedModels = traverseModel(modelName, model, this_1.schema.namespaces[namespaceName], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                    keyValues = this_1.getIndexKeyValuesFromModel(model);\n                    _deleted = item._deleted;\n                    index = store.index('byPk');\n                    return [4 /*yield*/, index.getKey(this_1.canonicalKeyPath(keyValues))];\n                  case 1:\n                    key = _a.sent();\n                    if (!!_deleted) return [3 /*break*/, 3];\n                    instance = connectedModels.find(function (_a) {\n                      var instance = _a.instance;\n                      var instanceKeyValues = _this.getIndexKeyValuesFromModel(instance);\n                      return keysEqual(instanceKeyValues, keyValues);\n                    }).instance;\n                    result.push([instance, key ? OpType.UPDATE : OpType.INSERT]);\n                    return [4 /*yield*/, store.put(instance, key)];\n                  case 2:\n                    _a.sent();\n                    return [3 /*break*/, 5];\n                  case 3:\n                    result.push([item, OpType.DELETE]);\n                    if (!key) return [3 /*break*/, 5];\n                    return [4 /*yield*/, store.delete(key)];\n                  case 4:\n                    _a.sent();\n                    _a.label = 5;\n                  case 5:\n                    return [2 /*return*/];\n                }\n              });\n            };\n\n            this_1 = this;\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 7, 8, 9]);\n            items_2 = __values(items), items_2_1 = items_2.next();\n            _b.label = 3;\n          case 3:\n            if (!!items_2_1.done) return [3 /*break*/, 6];\n            item = items_2_1.value;\n            return [5 /*yield**/, _loop_2(item)];\n          case 4:\n            _b.sent();\n            _b.label = 5;\n          case 5:\n            items_2_1 = items_2.next();\n            return [3 /*break*/, 3];\n          case 6:\n            return [3 /*break*/, 9];\n          case 7:\n            e_12_1 = _b.sent();\n            e_12 = {\n              error: e_12_1\n            };\n            return [3 /*break*/, 9];\n          case 8:\n            try {\n              if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n            } finally {\n              if (e_12) throw e_12.error;\n            }\n            return [7 /*endfinally*/];\n          case 9:\n            return [4 /*yield*/, txn.done];\n          case 10:\n            _b.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.createObjectStoreForModel = function (db, namespaceName, storeName, modelName) {\n    var store = db.createObjectStore(storeName, {\n      autoIncrement: true\n    });\n    var indexes = this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n    indexes.forEach(function (_a) {\n      var _b = __read(_a, 3),\n        idxName = _b[0],\n        keyPath = _b[1],\n        options = _b[2];\n      store.createIndex(idxName, keyPath, options);\n    });\n    return store;\n  };\n  return IndexedDBAdapter;\n}();\nexport default new IndexedDBAdapter();","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","idb","ModelPredicateCreator","isPredicateObj","isPredicateGroup","OpType","QueryOne","getIndex","getIndexFromAssociation","isModelConstructor","isPrivateMode","traverseModel","validatePredicate","inMemoryPagination","keysEqual","getStorename","getIndexKeys","extractPrimaryKeyValues","isSafariCompatabilityMode","logger","DB_NAME","keyArr","_this","safariCompatabilityMode","length","IndexedDBAdapter","modelConstructor","namespace","namespaceResolver","modelName","model","Object","getPrototypeOf","constructor","namespaceName","keys","schema","namespaces","name","then","isPrivate","_a","error","Promise","reject","resolve","_b","debug","storeName","modelNameArr","join","theSchema","modelInstanceCreator","getModelConstructorByModelName","sessionId","checkPrivate","setSafariCompatabilityMode","initPromise","res","rej","dbName","db","VERSION","openDB","upgrade","oldVersion","newVersion","txn","forEach","models","createObjectStoreForModel","objectStoreNames","origStore","objectStore","tmpName","_c","getNamespaceAndModelFromStorename","modelInCurrentSchema","deleteObjectStore","newStore","openCursor","cursor","_e","count","value","put","continue","Set","map","filter","has","error_2","abort","error_1","storeOrStoreName","index","transaction","store","get","canonicalKeyPath","result","condition","getStorenameForModel","connectedModels","set","connectionStoreNames","values","item","instance","add","tx","Array","from","keyValues","getIndexKeyValuesFromModel","_get","fromDB","predicates","getPredicates","predicateObjs","type","isValid","msg","Error","connectionStoreNames_1","resItem","storeName_1","store_1","itemKeyValues","key","fromDB_1","opType","undefined","INSERT","UPDATE","modelKeyValues","getKey","push","done","srcModelName","records","relations","relationships","relationTypes","record","predicate","pagination","keyPath","queryByKey","keyValueFromPredicate","hasSort","sort","hasPagination","limit","getByKey","filterOnPredicate","filtered","getAll","all","enginePagination","load","keyValue","predicateObj","find","p","field","operator","operand","fieldName","indexNames","name_1","idx","fieldPredicates","predicateIndexes","matchingIndex","String","actualPredicateIndexes","i","predicateIndex","candidateResults","every","distinctResults","Map","predicateIndexes_1","resultGroup","resultGroup_1","id","m","page","initialRecord","Math","max","advance","pageResults","hasLimit","firstOrLast","FIRST","modelOrModelConstructor","deleteQueue","nameSpace","query","deleteTraverse","deleteItem","deletedModels","reduce","acc","items","concat","clear","warn","items_1","itemKey","toString","delete","srcModel","relations_1","rel","relationType","targetName","targetNames","associatedWith","_d","models_1","hasOneIndex","recordToDelete","models_2","indexes","childrenArray","close","deleteDB","this_1","_deleted","instanceKeyValues","DELETE","items_2","createObjectStore","autoIncrement","idxName","options","createIndex"],"sourceRoot":"","sources":["../../../src/storage/adapter/IndexedDBAdapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}