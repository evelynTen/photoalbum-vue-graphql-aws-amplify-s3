{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar Mutex = /** @class */function () {\n  function Mutex() {\n    this._queue = [];\n    this._pending = false;\n  }\n  Mutex.prototype.isLocked = function () {\n    return this._pending;\n  };\n  Mutex.prototype.acquire = function () {\n    var _this = this;\n    var ticket = new Promise(function (resolve) {\n      return _this._queue.push(resolve);\n    });\n    if (!this._pending) {\n      this._dispatchNext();\n    }\n    return ticket;\n  };\n  Mutex.prototype.runExclusive = function (callback) {\n    return this.acquire().then(function (release) {\n      var result;\n      try {\n        result = callback();\n      } catch (e) {\n        release();\n        throw e;\n      }\n      return Promise.resolve(result).then(function (x) {\n        return release(), x;\n      }, function (e) {\n        release();\n        throw e;\n      });\n    });\n  };\n  Mutex.prototype._dispatchNext = function () {\n    if (this._queue.length > 0) {\n      this._pending = true;\n      this._queue.shift()(this._dispatchNext.bind(this));\n    } else {\n      this._pending = false;\n    }\n  };\n  return Mutex;\n}();\nexport default Mutex;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;AA0CA;EAAA;IA+CS,WAAM,GAAsD,EAAE;IAC9D,aAAQ,GAAG,KAAK;EACzB;EAhDCA,wBAAQ,GAAR;IACC,OAAO,IAAI,CAACC,QAAQ;EACrB,CAAC;EAEDD,uBAAO,GAAP;IAAA;IACC,IAAME,MAAM,GAAG,IAAIC,OAAO,CAA0B,iBAAO;MAC1D,YAAI,CAACC,MAAM,CAACC,IAAI,CAACC,OAAO,CAAC;IAAzB,CAAyB,CACzB;IAED,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAE;MACnB,IAAI,CAACM,aAAa,EAAE;;IAGrB,OAAOL,MAAM;EACd,CAAC;EAEDF,4BAAY,GAAZ,UAAgBQ,QAAkC;IACjD,OAAO,IAAI,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,iBAAO;MACjC,IAAIC,MAAsB;MAE1B,IAAI;QACHA,MAAM,GAAGH,QAAQ,EAAE;OACnB,CAAC,OAAOI,CAAC,EAAE;QACXC,OAAO,EAAE;QACT,MAAMD,CAAC;;MAGR,OAAOT,OAAO,CAACG,OAAO,CAACK,MAAM,CAAC,CAACD,IAAI,CAClC,UAACI,CAAI;QAAK,OAACD,OAAO,EAAE,EAAEC,CAAC;MAAb,CAAc,EACxB,WAAC;QACAD,OAAO,EAAE;QACT,MAAMD,CAAC;MACR,CAAC,CACD;IACF,CAAC,CAAC;EACH,CAAC;EAEOZ,6BAAa,GAArB;IACC,IAAI,IAAI,CAACI,MAAM,CAACW,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACd,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACG,MAAM,CAACY,KAAK,EAAG,CAAC,IAAI,CAACT,aAAa,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD,MAAM;MACN,IAAI,CAAChB,QAAQ,GAAG,KAAK;;EAEvB,CAAC;EAIF,YAAC;AAAD,CAAC,EAjDD;AAmDA,eAAeD,KAAK","names":["Mutex","_pending","ticket","Promise","_queue","push","resolve","_dispatchNext","callback","acquire","then","result","e","release","x","length","shift","bind"],"sourceRoot":"","sources":["../../src/Util/Mutex.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}