{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetJourneyExecutionActivityMetricsRequest, GetJourneyExecutionActivityMetricsResponse } from \"../models/models_1\";\nimport { deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand, serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey activity.</p>\n */\nvar GetJourneyExecutionActivityMetricsCommand = /** @class */function (_super) {\n  __extends(GetJourneyExecutionActivityMetricsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetJourneyExecutionActivityMetricsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetJourneyExecutionActivityMetricsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PinpointClient\";\n    var commandName = \"GetJourneyExecutionActivityMetricsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetJourneyExecutionActivityMetricsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetJourneyExecutionActivityMetricsResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetJourneyExecutionActivityMetricsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand(input, context);\n  };\n  GetJourneyExecutionActivityMetricsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand(output, context);\n  };\n  return GetJourneyExecutionActivityMetricsCommand;\n}($Command);\nexport { GetJourneyExecutionActivityMetricsCommand };","map":{"version":3,"mappings":";AACA,SACEA,yCAAyC,EACzCC,0CAA0C,QACrC,oBAAoB;AAC3B,SACEC,iEAAiE,EACjEC,+DAA+D,QAC1D,4BAA4B;AACnC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAe5D;;;AAGA;EAA+DC;EAK7D;EACA;EAEA,mDAAqBC,KAAqD;IAA1E;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,qEAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAA2C,EAC3CC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IAEzF,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,gBAAgB;IACnC,IAAMC,WAAW,GAAG,2CAA2C;IAC/D,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,yCAAyC,CAAC0B,kBAAkB;MACrFC,wBAAwB,EAAE1B,0CAA0C,CAACyB;KACtE;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,6DAAS,GAAjB,UACEH,KAAqD,EACrDuB,OAAuB;IAEvB,OAAO5B,+DAA+D,CAACK,KAAK,EAAEuB,OAAO,CAAC;EACxF,CAAC;EAEOpB,+DAAW,GAAnB,UACEqB,MAAsB,EACtBD,OAAuB;IAEvB,OAAO7B,iEAAiE,CAAC8B,MAAM,EAAED,OAAO,CAAC;EAC3F,CAAC;EAIH,gDAAC;AAAD,CAAC,CA5D8DzB,QAAQ","names":["GetJourneyExecutionActivityMetricsRequest","GetJourneyExecutionActivityMetricsResponse","deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetJourneyExecutionActivityMetricsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sourceRoot":"","sources":["../../../commands/GetJourneyExecutionActivityMetricsCommand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}