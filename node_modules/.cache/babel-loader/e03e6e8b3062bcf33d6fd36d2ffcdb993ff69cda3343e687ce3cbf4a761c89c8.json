{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __values } from \"tslib\";\nvar DoubleLinkedNode = /** @class */function () {\n  function DoubleLinkedNode(keyVal) {\n    this.key = keyVal ? keyVal : '';\n    this.prevNode = null;\n    this.nextNode = null;\n  }\n  return DoubleLinkedNode;\n}();\n/**\n * double linked list plus a hash table inside\n * each key in the cache stored as a node in the list\n * recently visited node will be rotated to the head\n * so the Last Recently Visited node will be at the tail\n *\n * @member head - dummy head of the linked list\n * @member tail - dummy tail of the linked list\n * @member hashtable - the hashtable which maps cache key to list node\n * @member length - length of the list\n */\nvar CacheList = /** @class */function () {\n  /**\n   * initialization\n   */\n  function CacheList() {\n    this.head = new DoubleLinkedNode();\n    this.tail = new DoubleLinkedNode();\n    this.hashtable = {};\n    this.length = 0;\n    this.head.nextNode = this.tail;\n    this.tail.prevNode = this.head;\n  }\n  /**\n   * insert node to the head of the list\n   *\n   * @param node\n   */\n  CacheList.prototype.insertNodeToHead = function (node) {\n    var tmp = this.head.nextNode;\n    this.head.nextNode = node;\n    node.nextNode = tmp;\n    node.prevNode = this.head;\n    tmp.prevNode = node;\n    this.length = this.length + 1;\n  };\n  /**\n   * remove node\n   *\n   * @param node\n   */\n  CacheList.prototype.removeNode = function (node) {\n    node.prevNode.nextNode = node.nextNode;\n    node.nextNode.prevNode = node.prevNode;\n    node.prevNode = null;\n    node.nextNode = null;\n    this.length = this.length - 1;\n  };\n  /**\n   * @return true if list is empty\n   */\n  CacheList.prototype.isEmpty = function () {\n    return this.length === 0;\n  };\n  /**\n   * refresh node so it is rotated to the head\n   *\n   * @param key - key of the node\n   */\n  CacheList.prototype.refresh = function (key) {\n    var node = this.hashtable[key];\n    this.removeNode(node);\n    this.insertNodeToHead(node);\n  };\n  /**\n   * insert new node to the head and add it in the hashtable\n   *\n   * @param key - the key of the node\n   */\n  CacheList.prototype.insertItem = function (key) {\n    var node = new DoubleLinkedNode(key);\n    this.hashtable[key] = node;\n    this.insertNodeToHead(node);\n  };\n  /**\n   * @return the LAST Recently Visited key\n   */\n  CacheList.prototype.getLastItem = function () {\n    return this.tail.prevNode.key;\n  };\n  /**\n   * remove the cache key from the list and hashtable\n   * @param key - the key of the node\n   */\n  CacheList.prototype.removeItem = function (key) {\n    var removedItem = this.hashtable[key];\n    this.removeNode(removedItem);\n    delete this.hashtable[key];\n  };\n  /**\n   * @return length of the list\n   */\n  CacheList.prototype.getSize = function () {\n    return this.length;\n  };\n  /**\n   * @return true if the key is in the hashtable\n   * @param key\n   */\n  CacheList.prototype.containsKey = function (key) {\n    return key in this.hashtable;\n  };\n  /**\n   * clean up the list and hashtable\n   */\n  CacheList.prototype.clearList = function () {\n    var e_1, _a;\n    try {\n      for (var _b = __values(Object.keys(this.hashtable)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var key = _c.value;\n        if (this.hashtable.hasOwnProperty(key)) {\n          delete this.hashtable[key];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    this.head.nextNode = this.tail;\n    this.tail.prevNode = this.head;\n    this.length = 0;\n  };\n  /**\n   * @return all keys in the hashtable\n   */\n  CacheList.prototype.getKeys = function () {\n    return Object.keys(this.hashtable);\n  };\n  /**\n   * mainly for test\n   *\n   * @param key\n   * @return true if key is the head node\n   */\n  CacheList.prototype.isHeadNode = function (key) {\n    var node = this.hashtable[key];\n    return node.prevNode === this.head;\n  };\n  /**\n   * mainly for test\n   *\n   * @param key\n   * @return true if key is the tail node\n   */\n  CacheList.prototype.isTailNode = function (key) {\n    var node = this.hashtable[key];\n    return node.nextNode === this.tail;\n  };\n  return CacheList;\n}();\nexport default CacheList;","map":{"version":3,"mappings":"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","names":["keyVal","key","prevNode","nextNode","head","DoubleLinkedNode","tail","hashtable","length","CacheList","node","tmp","removeNode","insertNodeToHead","removedItem","keys","hasOwnProperty","Object"],"sourceRoot":"","sources":["../../src/Utils/CacheList.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}